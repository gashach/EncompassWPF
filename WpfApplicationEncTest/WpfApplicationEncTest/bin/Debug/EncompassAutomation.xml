<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EncompassAutomation</name>
    </assembly>
    <members>
        <member name="T:EllieMae.Encompass.Automation.EncompassApplication">
            <summary>
            Represents the static Encompass Application object.
            </summary>
            <remarks>The EncompassApplication object is the entry point into the Encompass Automation object model.
            Use the this class's static methods and events to modify the behavior of the Encompass
            User Interface.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Automation.EncompassApplication.Attach">
            <summary>
            This method is meant for use by the Encompass Application Framework only.
            </summary>
        </member>
        <member name="E:EllieMae.Encompass.Automation.EncompassApplication.Login">
            <summary>
            Event that is raised when the application has completed the login process and is ready
            for user interaction.
            </summary>
        </member>
        <member name="E:EllieMae.Encompass.Automation.EncompassApplication.Logout">
            <summary>
            Event indicating that user has logged out of the Encompass Server and the application is
            closing.
            </summary>
            <remarks>When this event occurs the user has already been disconnected from the Encompass
            server, so any attempt to access remote data will fail.</remarks>
        </member>
        <member name="E:EllieMae.Encompass.Automation.EncompassApplication.LoanOpened">
            <summary>
            Event that occurs when the user opens a loan in the Loan Editor.
            </summary>
        </member>
        <member name="E:EllieMae.Encompass.Automation.EncompassApplication.LoanClosing">
            <summary>
            Event that occurs when a user is closing a loan that was previously opened.
            </summary>
            <remarks>This event occurs prior to the loan actually being closed, allowing code to
            make changes to the contents of the loan prior to its being closed.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Automation.EncompassApplication.CommandLineArguments">
            <summary>
            Gets the command-line arguments passed to this application.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Automation.EncompassApplication.Screens">
            <summary>
            Gets or sets the currently visible screen in Encompass.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Automation.EncompassApplication.Session">
            <summary>
            Gets the Session object for the current login session.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Automation.EncompassApplication.CurrentLoan">
            <summary>
            Gets the loan which is currently open in the loan editor.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Automation.EncompassApplication.CurrentUser">
            <summary>
            Gets the currently logged in user.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Automation.EncompassApplication.EPass">
            <summary>
            Gets the ePASS functionality exposed by the application.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Automation.EncompassApplication.LoanServices">
            <summary>
            Gets the LoanServices functionality exposed by the application.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Automation.ApplicationScreens">
            <summary>
            Provides access to the different top-level screens which make up the Encompass application.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Automation.ApplicationScreens.GetEnumerator">
            <summary>
            Provides a enumerator to iterate over the Encompass screens.
            </summary>
            <returns>Returns an enumerator for iterating over the screens.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Automation.ApplicationScreens.BeginInvoke(System.Delegate,System.Object[])">
            <summary>
            Begins the invocation of an asynchronous task on the UI thread of the screen.
            </summary>
            <param name="method">The delegate for the method to be executed</param>
            <param name="args">The arguments passed to the delegate.</param>
            <returns>Returns an IAsyncResult which can be used to retrieve the results of the call.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Automation.ApplicationScreens.EndInvoke(System.IAsyncResult)">
            <summary>
            Ends the invocation of an asynchronous method started using the <see cref="M:EllieMae.Encompass.Automation.ApplicationScreens.BeginInvoke(System.Delegate,System.Object[])"/> method.
            </summary>
            <param name="result">The AsyncResult object returned by the call to BeginInvoke.</param>
            <returns>Returns the output of the original method.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Automation.ApplicationScreens.Invoke(System.Delegate,System.Object[])">
            <summary>
            Synchronously invokes a delegate on the UI thread of the application.
            </summary>
            <param name="method">The method to be invoked.</param>
            <param name="args">The aruments supplied to the method.</param>
            <returns>Returns the results of the method invocation.</returns>
        </member>
        <member name="P:EllieMae.Encompass.Automation.ApplicationScreens.Item(EllieMae.Encompass.Automation.EncompassScreen)">
            <summary>
            Returns the <see cref="T:EllieMae.Encompass.Automation.Screen"/> object for the specified value of the 
            <see cref="T:EllieMae.Encompass.Automation.EncompassScreen"/> enumeration.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Automation.ApplicationScreens.Current">
            <summary>
            Gets or sets the current screen.
            </summary>
            <remarks>If an attempt is made to make a <see cref="T:EllieMae.Encompass.Automation.Screen"/> current to which
            the user does not have access, an exception will occur.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Automation.ApplicationScreens.InvokeRequired">
            <summary>
            Indicates if the call must be marshalled to the UI thread of the screen.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Automation.ApplicationScreens.System#Windows#Forms#IWin32Window#Handle">
            <summary>
            Provides a Windows handle for use in displaying message boxes.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Automation.EncompassScreen">
            <summary>
            Enumeration defining the top-level screens available in Encompass.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.Unknown">
            <summary>Unspecified screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.Pipeline">
            <summary>The loan Pipeline screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.News">
            <summary>The News screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.Dashboard">
            <summary>The Dashboard screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.Reports">
            <summary>The Reports screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.Loans">
            <summary>The Loan Editor screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.ePASS">
            <summary>The ePASS screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.BorrowerContacts">
            <summary>The Borrower Contacts screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.BusinessContacts">
            <summary>The Business Contacts screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.Calendar">
            <summary>The Calendar screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.Tasks">
            <summary>The Task List screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.Campaigns">
            <summary>The Campaign Management screen</summary>
        </member>
        <member name="F:EllieMae.Encompass.Automation.EncompassScreen.Trades">
            <summary>The Trade Management screen</summary>
        </member>
        <member name="T:EllieMae.Encompass.Automation.AutomationException">
            <summary>
            Reprensents a generic Encompass automation error.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Automation.AutomationException.#ctor(System.String)">
            <summary>
            Constructor using a specific error message.
            </summary>
            <param name="message">The description of the error.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.AutomationException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor for a re-thrown exception.
            </summary>
            <param name="message">The description of the exception.</param>
            <param name="innerException">The inner exception being re-thrown.</param>
        </member>
        <member name="T:EllieMae.Encompass.Automation.BorrowerContactsScreen">
            <summary>
            Represents the Borrower Contacts screen within the Encompass application.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Automation.Screen">
            <summary>
            Provides the base class for all top-level screens within the Encompass application.
            </summary>
            <remarks>
            Many of the screens in Encompass provide screen-specific functionality which can be accessed
            by casting the screen to the appropriat derived type, such as the <see cref="T:EllieMae.Encompass.Automation.PipelineScreen"/>.
            To access a Screen object, use the <see cref="P:EllieMae.Encompass.Automation.EncompassApplication.Screens"/> property.
            </remarks>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Screen.MakeCurrent">
            <summary>
            Makes this screen the current;y visible screen in the Encompass UI.
            </summary>
            <remarks>This screen must be available in order to be made current. If the user
            does not have access to this screen or the screen is otherwise unavailable,
            an exception will occur.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Screen.IsCurrent">
            <summary>
            Indicates if this screen is the currently active screen in the Encompass UI.
            </summary>
            <returns>Returns <c>true</c> is the screen is active, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:EllieMae.Encompass.Automation.Screen.ScreenType">
            <summary>
            Gets the <see cref="T:EllieMae.Encompass.Automation.EncompassScreen"/> enumeration value for this screen.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Automation.BorrowerContactsScreen.ApplyFilter(EllieMae.Encompass.Query.QueryCriterion,EllieMae.Encompass.BusinessObjects.Contacts.ContactLoanMatchType,EllieMae.Encompass.Query.SortCriterion,System.String)">
            <summary>
            Applies a filter to the user list on the Borrower Contacts screen.
            </summary>
            <param name="cri">The criterion for the filter.</param>
            <param name="matchType">The match type for the filter</param>
            <param name="sortOrder">The column to sort by when the results are displayed in the ListView.</param>
            <param name="description">A description for this query to be displayed in the UI.</param>
        </member>
        <member name="T:EllieMae.Encompass.Automation.BusinessContactsScreen">
            <summary>
            Represents the Business Contacts screen within the Encompass application.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Automation.BusinessContactsScreen.ApplyFilter(EllieMae.Encompass.Query.QueryCriterion,EllieMae.Encompass.BusinessObjects.Contacts.ContactLoanMatchType,EllieMae.Encompass.Query.SortCriterion,System.String)">
            <summary>
            Applies a filter to the user list on the Borrower Contacts screen.
            </summary>
            <param name="cri">The criterion for the filter.</param>
            <param name="matchType">The match type for the filter</param>
            <param name="sortOrder">The column to sort by when the results are displayed in the ListView.</param>
            <param name="description">A description for this query to be displayed in the UI.</param>
        </member>
        <member name="T:EllieMae.Encompass.Automation.EPass">
            <summary>
            Provides access to the ePASS Services display.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Automation.EPass.DisplayServices(System.String)">
            <summary>
            Displays the available ePASS providers for the specified service type.
            </summary>
            <param name="serviceType">The service type to be displayed.</param>
            <remarks>The service type specified should match one of the service types
            listed in the "Services" pane of the Loan Editor, e.g. "Credit Report".</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Automation.EPassScreen">
            <summary>
            Represents the ePASS screen.
            </summary>
            <remarks>This screen is only available when a loan is open in the loan editor.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Automation.EPassScreen.Navigate(System.String)">
            <summary>
            Navigates the ePASS browser to a particular URL.
            </summary>
            <param name="url">The destination URL.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.EPassScreen.Execute(System.String)">
            <summary>
            Executes an ePASS signature.
            </summary>
            <param name="emnSignature">The Ellie Mae Network signature to be executed.</param>
            <remarks>Ellie Mae Network Signatures are semi-colon delimited strings that provide the Services window with
            instructions to perform a certain prescribed action. This function is provided for use only
            by customers who understand and need use of existing EMN signatures.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Automation.LoanServices">
            <summary>
            Provides access to the LoanServices.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Automation.LoanServices.OrderComplianceReport">
            <summary>
            Triggers the process of ordering a compliance report.
            </summary>
            <remarks>This method should only be called after a loan has fully loaded in Encompass.
            Calling this method as a result of the EncompassApplication.LoanOpened event will throw an exception.
            Calling this method causes the loan to be commited. Calling this method in the Loan's BeforeCommit or Commited 
            event will cause an infinite loop.</remarks>
            <example>
      The following code demonstrates how to to automatically order a compliance report from a plugin.
      <code>
        <![CDATA[
using System;
using EllieMae.Encompass.Automation;
using EllieMae.Encompass.ComponentModel;

namespace TestPlugin
{
    [Plugin]
    public class TestPlugin
    {
        public TestPlugin()
        {
            EncompassApplication.LoanOpened += EncompassApplication_LoanOpened;
        }
        
        private void EncompassApplication_LoanOpened(object sender, EventArgs e)
        {
            EncompassApplication.CurrentLoan.FieldChange += CurrentLoan_FieldChange;
        }
        
        private void CurrentLoan_FieldChange(object source, EllieMae.Encompass.BusinessObjects.Loans.FieldChangeEventArgs e)
        {
            if (e.FieldID == "4002")
            {
                EncompassApplication.LoanServices.OrderComplianceReport();
            }
        }
    }
}
        ]]>
      </code>
    </example>
        </member>
        <member name="T:EllieMae.Encompass.Automation.LoansScreen">
            <summary>
            Represents the Loans screen within Encompass, which is the loan editor.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Automation.LoansScreen.GoToForm(System.String)">
            <summary>
            Sets the specified form as the currently visible form.
            </summary>
            <param name="formName">The name of the form to set as current.</param>
            <remarks>The specified form name must be in the user's form list or this call will be ignored.
            When this method is invoked, the specified form is loaded asynchronously, meaning that you cannot
            assume that when this call is complete that the specified form has been completely loaded into
            the loan editor.
            </remarks>
        </member>
        <member name="M:EllieMae.Encompass.Automation.LoansScreen.Open(System.String)">
            <summary>
            Opens a loan into the loan editor screen.
            </summary>
            <param name="guid">The unique identifier of the loan to be opened.</param>
            <remarks>If a loan is already open in the Loans screen, this will will throw an exception. You should
            <see cref="M:EllieMae.Encompass.Automation.LoansScreen.Close(System.Boolean)"/> the existing loan prior to opening a new one.
            <p>Additionally, invoking this method starts the process of opening a loan in the loan editor, but the
            load occurs asynchronously. As a result, you cannot assume that the loan has been completely opened when this 
            method returns. To perform an action when the loan has completed loading using the EncompassApplication.LoanOpened
            event instead.</p>
            </remarks>
        </member>
        <member name="M:EllieMae.Encompass.Automation.LoansScreen.OpenNew(EllieMae.Encompass.BusinessObjects.Loans.LoanFolder,EllieMae.Encompass.BusinessObjects.Loans.Templates.LoanTemplate)">
            <summary>
            Creates a new loan and opens it in the loan editor.
            </summary>
            <param name="targetFolder">The <see cref="T:EllieMae.Encompass.BusinessObjects.Loans.LoanFolder"/> in which the new loan file will be placed.</param>
            <param name="template">The <see cref="T:EllieMae.Encompass.BusinessObjects.Loans.Templates.LoanTemplate"/> to apply to the new loan, or <c>null</c> to apply no template.</param>
            <remarks>If a loan is already open in the Loans screen, this will will throw an exception. You should
            <see cref="M:EllieMae.Encompass.Automation.LoansScreen.Close(System.Boolean)"/> the existing loan prior to opening a new one.
            <p>Additionally, invoking this method starts the process of opening a loan in the loan editor, but the
            load occurs asynchronously. As a result, you cannot assume that the loan has been completely opened when this 
            method returns. To perform an action when the loan has completed loading using the EncompassApplication.LoanOpened
            event instead.</p>
            </remarks>
        </member>
        <member name="M:EllieMae.Encompass.Automation.LoansScreen.IsOpen">
            <summary>
            Indicates if the editor is currently open with a loan.
            </summary>
            <returns>Returns <c>true</c> if the editor is open, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Automation.LoansScreen.Close(System.Boolean)">
            <summary>
            Closes the Loan Editor.
            </summary>
            <param name="allowCancel">Indicates if the user should be allowed to cancel this operation.</param>
            <returns>Returns <c>true</c> if the Loan screen has been closed, <c>false</c> otherwise.</returns>
            <remarks>If the user has modified the loan they will be offered the opportunity to save their changes.
            If the allowCancel parameter is <c>true</c>, the user will also be allowed to cancel the operation
            and continue working in the loan. In this case, the method will return <c>false</c> to indicate the
            loan editor remains open.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Automation.LoansScreen.AttachCodebaseToForm(System.String,System.Type)">
            <summary>
            Sets a codebase type for an Encompass standard form.
            </summary>
            <param name="formName">The name of the form as it appears in Encompass.</param>
            <param name="formType">The Type which represents the codebase for the form.</param>
            <remarks>The specified formType must derive from the base
            <see cref="T:EllieMae.Encompass.Forms.Form"/> type and must conform to all rules
            applicable to custom form codebase assemblies (e.g. must include a zero-parameter
            constructor).
            <p>Whenever the specified standard form is loaded, an instance of the specified
            formType will be instantiated. You can then dynamically modify the content or behavior
            of the standard form. Note that some modifications may break the default behavior of the
            form so extensive testing should be used when modifying existing behavior.</p>
            </remarks>
        </member>
        <member name="M:EllieMae.Encompass.Automation.LoansScreen.Print(System.String[])">
            <summary>
            Opens the Print dialog and prints one or more standard or custom forms.
            </summary>
            <param name="formNames">A list of the form names to be printed. For standard forms,
            the value should simply be the form name. For custom forms, the value should be the
            fully qualified path to the form, e.g. "public:\Approval Forms\Standard Approval Form.doc"</param>
        </member>
        <member name="E:EllieMae.Encompass.Automation.LoansScreen.FormLoaded">
            <summary>
            Event indicating that a new input form is being loaded into the Form Editor.
            </summary>
        </member>
        <member name="E:EllieMae.Encompass.Automation.LoansScreen.FormUnloading">
            <summary>
            Event indicating that an input form is being unloaded into the Form Editor.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Automation.LoansScreen.CurrentForm">
            <summary>
            Gets the currently active input form from the Loan Editor.
            </summary>
            <remarks>If no form is currently active or the currently active form does not support
            the <see cref="T:EllieMae.Encompass.Forms.Form"/> object model, this method will return <c>null</c>.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Automation.FormChangeEventArgs">
            <summary>
            Event argument class for the LoansScreen's FormLoaded and FormUnloading events.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Automation.FormChangeEventArgs.Form">
            <summary>
            Gets the Form which is being loaded or unloaded.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Automation.FormChangeEventHandler">
            <summary>
            Delegate class for the LoansScreen's FormLoaded and FormUnloading events.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Automation.Macro">
            <summary>
            Represents the collection of Macros available in the Form Builder's Macro window.
            </summary>
            <remarks>Macros are staticly defined methods which provide shortcuts for functions
            that would otherwise require more significant understanding of the EncompassAutomation API.
            Although primarilly intended for use within the Input Form Builder's event editor,
            they can be used in any automation-enabled development environment.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.CopyField(System.String,System.String)">
            <summary>
            Copies the value of one loan field to another.
            </summary>
            <param name="sourceFieldID">The Field ID of the source field.</param>
            <param name="targetFieldID">The Field ID of the target field.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.OpenURL(System.String)">
            <summary>
            Macro for opening a URL in the user's default web browser application.
            </summary>
            <param name="url">The URL to open.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.IsLegalUrl(System.String)">
            <summary>
            Validate the url address to make sure it is safe
            </summary>
            <param name="urlInput"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.OpenEMail(System.String,System.String)">
            <summary>
            Opens a new mail message in the user's default mail application.
            </summary>
            <param name="addressees">The addressee to whom the message is to be sent.</param>
            <param name="subject">The subject of the message.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.OpenEMail(System.String,System.String,System.String)">
            <summary>
            Opens a new mail message in the user's default mail application.
            </summary>
            <param name="addressees">The addressee to whom the message is to be sent.</param>
            <param name="subject">The subject of the message.</param>
            <param name="body">The body of the email message. Only plain text is allowed, no HTML markup.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.IsLegalEmailAddress(System.String)">
            <summary>
            Validate the email addressees to make sure it is safe
            </summary>
            <param name="addressees"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.Run(System.String,System.String,System.Boolean)">
            <summary>
            Launches an external application.
            </summary>
            <param name="fileName">The full path to the application to be launched.</param>
            <param name="arguments">The command line arguments to be passed to the program.</param>
            <param name="waitForExit">Indicates if the Encompass UI should wait until the program
            terminates before responding to user input.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.IsLegalProgramName(System.String)">
            <summary>
            Validate the program name path to make sure it is a full valid physical path
            </summary>
            <param name="addressees"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.SendKeys(System.String)">
            <summary>
            Sends keystrokes to the application window to be executed.
            </summary>
            <param name="keySequence">The sequence of keystrokes to send.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.DisplayServices(System.String)">
            <summary>
            Opens the ePASS Services Window.
            </summary>
            <param name="serviceType">The service type to be displayed.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.Confirm(System.String)">
            <summary>
            Provides a pop-up confirmation window and return a bool indicating if the user
            pressed the OK button.
            </summary>
            <param name="message">The message to be displayed.</param>
            <returns><c>True</c> if the user clicked OK, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.Alert(System.String)">
            <summary>
            Provides a pop-up alert window to the user.
            </summary>
            <param name="message">The message to be displayed.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.ResolveZipCode(System.String,System.String,System.String,System.String)">
            <summary>
            Performs a ZIP Code lookup and populates the specified fields with the
            City, County and State values for it.
            </summary>
            <param name="expression">The expression to be evaluated (using the Eval syntax) to a ZIP Code.</param>
            <param name="cityFieldID">The Field ID of the associated City field, or blank for none.</param>
            <param name="countyFieldID">The Field ID of the associated County field, or blank for none.</param>
            <param name="stateFieldID">The Field ID of the associated State field, or blank for none.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.GoToScreen(EllieMae.Encompass.Automation.EncompassScreen)">
            <summary>
            Changes the currently visible screen in EncompassApplication.
            </summary>
            <param name="screen"></param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.GoToForm(System.String)">
            <summary>
            Changes the currently visible input form in EncompassApplication.
            </summary>
            <param name="formName">The name of the form to make current, as it appears in the
            Forms list.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.ExecAction(System.String)">
            <summary>
            Executes a standard action in the Encompass loan editor.
            </summary>
            <param name="action">The action to be performed</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.ExecSignature(System.String)">
            <summary>
            Executes an Ellie Mae Network Signature to invoke a partner service.
            </summary>
            <param name="emnSignature">The signature to be executes</param>	
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.GetField(System.String)">
            <summary>
            Gets a single field from the loan.
            </summary>
            <param name="fieldId">The ID of the field to be updated</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.SetField(System.String,System.String)">
            <summary>
            Sets a single field in the loan.
            </summary>
            <param name="fieldId">The ID of the field to be updated</param>
            <param name="value">The value to store into the specified field</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.SetFieldNoRules(System.String,System.String)">
            <summary>
            Sets a single field in the loan, ignoring any business rules that may prevent this action.
            </summary>
            <param name="fieldId">The ID of the field to be updated</param>
            <param name="value">The value to store into the specified field</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.SetFieldEval(System.String,System.String)">
            <summary>
            Sets a single field in the loan by evaluating an expression.
            </summary>
            <param name="fieldId">The ID of the field to be updated</param>
            <param name="expr">The expression to evaluate and save into the specified field</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.Eval(System.String)">
            <summary>
            Evaluates an expression using the custom field calculation engine.
            </summary>
            <param name="expr">The expression to be evaluated.</param>
            <returns>Returns the result of the evaluation of the given expression.</returns>
            <remarks>The expression syntax is the same as that used for the Encompass
            Loan Custom Field Calculations.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.Popup(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Displays an input form in a modal pop-up window.
            </summary>
            <param name="formName">The name of the form to be displayed.</param>
            <param name="title">The title of the Window to be displayed.</param>
            <param name="width">The width of the pop-up window, in pixels.</param>
            <param name="height">The height of the pop-up window, in pixels.</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.Print(System.String,System.String,System.String)">
            <summary>
            Prints one or more output forms.
            </summary>
            <param name="form1">First form to print</param>
            <param name="form2">Second form to print</param>
            <param name="form3">Third form to print</param>
        </member>
        <member name="M:EllieMae.Encompass.Automation.Macro.Print(System.String[])">
            <summary>
            Prints one or more output forms.
            </summary>
            <param name="formNames">The name of the form to be displayed.</param>
        </member>
        <member name="T:EllieMae.Encompass.Automation.PipelineScreen">
            <summary>
            Represents the Pipeline screen within Encompass.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Automation.PipelineScreen.Refresh">
            <summary>
            Refreshes the current pipeline view.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.ComponentModel.MacroAttribute">
            <summary>
            Identifies a method to make it available in the Macro dialog.
            </summary>
            <exclude/>
        </member>
        <member name="T:EllieMae.Encompass.ComponentModel.PluginAttribute">
            <summary>
            Marks a class as being an Encompass plugin which should be loaded and initialized at runtime.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.ComponentModel.RequiredAttribute">
            <summary>
            Attribute used to indicate that a parameter is required.
            </summary>
            <remarks>For string-based parameters, this also means non-empty.</remarks>
            <exclude/>
        </member>
        <member name="T:EllieMae.Encompass.ComponentModel.ToolboxControlAttribute">
            <summary>
            Describes the appearance of a control within the Form Builder toolbox.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.ComponentModel.ToolboxControlAttribute.#ctor(System.String)">
            <summary>
            Constructor for a ToolboxAttribute object.
            </summary>
            <param name="displayName">The display name of the associated control.</param>
        </member>
        <member name="M:EllieMae.Encompass.ComponentModel.ToolboxControlAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor for a ToolboxAttribute object including an image source.
            </summary>
            <param name="displayName">The display name of the associated control.</param>
            <param name="imgSource">The name of the internal resource stream containing the image for the toolbox.</param>
        </member>
        <member name="P:EllieMae.Encompass.ComponentModel.ToolboxControlAttribute.DisplayName">
            <summary>
            Gets the display name of the component.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.ComponentModel.ToolboxControlAttribute.ToolboxIcon">
            <summary>
            Gets the icon to be used in the toolbox for the component.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.BorrowerType">
            <summary>
            Enum for different Borrower type
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.BorrowerType.Borrower">
            <summary>
            Enum used for Borrower contact in a loan
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.BorrowerType.CoBorrower">
            <summary>
            Enum used for Coborrower contact in a loan
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.BorrowerLink">
            <summary>
            Provides the ability for users to pop open the Rolodex dialog for Borrower/Coborrower contact and select a contact for one
            or more fields on the Form.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.RuntimeControl">
            <summary>
            Provides the base class for all controls which are used to affect the runtime behavior or
            appearance of the form.
            </summary>
            <remarks>Runtime controls are distinguished from Designer controls in that they are visible
            to the ens user at runtime. Designer controls are used to help the form designer build the form
            or add custom behaviors but have no physical appearance when the form is displayed at runetime.
            </remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Control">
            <summary>
            Represents a Control used on an Encompass Input Form.
            </summary>
            <remarks>
            <p>The Control class represents the base class for all controls on an Encompass input form.
            It provides the basic functionality common to all control types, including both 
            runtime controls (such as textboxes, labels, etc.) and designer controls (those used to
            help design the form but invisible at runtime).</p>
            <p>When a control is constructed at runtime, its properties are generally inaccessible until
            the control has been added to the Form. At that point you can set the control's properties
            to have the desired style and binding to the underlying loan.</p>
            </remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.#ctor">
            <summary>
            Default constructor for a control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.GetCustomAttribute(System.String)">
            <summary>
            Retrieves the value for a custom attribute
            </summary>
            <param name="name">The name of the custom attribute to retrieve</param>
            <returns>The value of the attribute, or an empty string if it does not exist.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.HitTest(System.Drawing.Point)">
            <summary>
            Indicates if an absolute position on the form is contained within the bounding
            rectangle of this control.
            </summary>
            <param name="p">The Point to test</param>
            <returns>Returns <c>true</c> if the point is within the control, 
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.GetContainer">
            <summary>
            Returns the container control for the current element.
            </summary>
            <returns>Null if the current element is the Form.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.Refresh">
            <summary>
            Forces the control to reload it's state.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.Delete">
            <summary>
            Deletes the current control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.GetHTMLDocument">
            <summary>
            Retrieves the parent HTMLDocument object for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.MoveTo(EllieMae.Encompass.Forms.Location)">
            <summary>
            Moves the control to a new location.
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.Select">
            <summary>
            Adds the control to the current control selection.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.BringToFront">
            <summary>
            Brings the control to the front of the ZIndex order so it is on top of other controls
            in the same container.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.SendToBack">
            <summary>
            Sends the control to the back of the ZIndex order so it is behind other controls
            in the same container.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.RefreshProperties">
            <summary>
            Refreshes the properties of the control to ensure they are up-to-date. This method
            is intended for use within the Encompass application only.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.Equals(System.Object)">
            <summary>
            Overrides the default notion of equivalence for two controls. The comparison is based
            on the controls' IDs.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.GetHashCode">
            <summary>
            Overrides the default hash code implementation for the current control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.ToString">
            <summary>
            Provides a string representation for the control.
            </summary>
            <returns>Returns the <see cref="P:EllieMae.Encompass.Forms.Control.ControlID"/> of the control.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.CompareTo(System.Object)">
            <summary>
            Compares the control to another control for sorting purposes.
            </summary>
            <param name="o">The Control to which to compare.</param>
            <remarks>This method produces a sort based on Control ID.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.AttachToElement(EllieMae.Encompass.Forms.Form,mshtml.IHTMLElement)">
            <summary>
            Attaches the control to an HTML element. This method is invoked when an element is
            rendered to the document or any time the element has become invalid.
            </summary>
            <param name="form"></param>
            <param name="controlElement"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.OnStartEditing">
            <summary>
            Notifies the control that the form is going into edit mode
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.OnStopEditing">
            <summary>
            Notifies the control that form is exiting edit mode
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.EnsureEditing">
            <summary>
            Ensures that the current form is in edit mode, or throws an exception
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.RenderHTML">
            <summary>
            Generates the HTML for a new control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.GetAttribute(System.String)">
            <summary>
            Gets an attribute from the element
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.SetAttribute(System.String,System.String)">
            <summary>
            Saves an attribute onto the underlying HTML element
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.GetBaseAttributes">
            <summary>
            Returns the base set of attributes for a new control. This gets called during the
            override RenderHTML() call.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.GetBaseAttributes(System.Boolean)">
            <summary>
            Returns the base set of attributes and sets the contentEditable flag for a control.
            </summary>
            <param name="contentEditable"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.NotifyPropertyChange">
            <summary>
            Raise the Change event in the parent Form object.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.EnsureAttached">
            <summary>
            Ensures that the object is properly attached to its underlying HTML element.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.ReattachRequired">
            <summary>
            Checks is the current control needs to be reattached to its base element
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.ReattachToElement">
            <summary>
            Reattaches the object to its underlying HTML element.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.PrepareForDisplay">
            <summary>
            Performs all of the final pre-render activities before the control is displayed.
            When this method is called, you can assume the entire control tree has already been
            established. This method will be invoked starting at the lowest-level controls
            and working its way up the control tree.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.AdjustSize(System.Drawing.Size)">
            <summary>
            Internal methed used to adjust the size of a control when it's size has certain contraints.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.OnContainerChanged">
            <summary>
            Invoked when the control's container changes, allowing it to update is visible state
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.ChangeControlID(System.String,System.String)">
            <summary>
            Invoked when the control ID is changed on the object.
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.deleteEvents">
            <summary>
            Deletes the control's event from the form's Event collection
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.getMovementOrigin(EllieMae.Encompass.Forms.Location)">
            <summary>
            Returns the origin for movement commands on the current control.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.getNearestAvailableLocation(System.Drawing.Point,EllieMae.Encompass.Forms.Location)">
            <summary>
            Finds the nearest point at which the current control could be positioned
            so as not to overlap with an other controls in the same container.
            </summary>
            <param name="currentPosition"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.norm(System.Drawing.Point)">
            <summary>
            Computes the 2-norm of a point
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.GetAbsoluteElementPosition(mshtml.IHTMLElement)">
            <summary>
            Returns the absolute postion of an element on the form.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.GetControlTypeForElement(mshtml.IHTMLElement)">
            <summary>
            Returns the control type for an HTML element.
            </summary>
            <param name="controlElement"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.SetControlTypeForElement(mshtml.IHTMLElement,System.Type)">
            <summary>
            Sets the control type on an HTML element.
            </summary>
            <param name="controlElement"></param>
            <param name="t"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.GetControlIDForElement(mshtml.IHTMLElement)">
            <summary>
            Gets the Control ID for an HTML element.
            </summary>
            <param name="controlElement"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.SetControlIDForElement(mshtml.IHTMLElement,System.String)">
            <summary>
            Sets the Control ID on an HTML element.
            </summary>
            <param name="controlElement"></param>
            <param name="controlId"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.IsValidControlID(System.String)">
            <summary>
            Verifies that a string is a valid control ID. Control IDs can contain only
            letters, numbers or the underscore character and must start with a letter.
            </summary>
            <param name="controlId"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.IsControl(mshtml.IHTMLElement)">
            <summary>
            Returns a flag indicating if an HTML element represents a control.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.FindChildByControlID(mshtml.IHTMLElement,System.String,System.Boolean)">
            <summary>
            Finds a child HTML element based on the control ID.
            </summary>
            <param name="parentElement"></param>
            <param name="controlId"></param>
            <param name="recurse"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.FindChildByControlID(mshtml.IHTMLElement,System.String,System.String)">
            <summary>
            Locates a child control using the underlying element's tag name as a hint.
            </summary>
            <param name="parentElement"></param>
            <param name="controlId"></param>
            <param name="tagName"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.IsDetached(mshtml.IHTMLElement)">
            <summary>
            Determines if an element is "Attached", i.e. is attached to an underlying document
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.MergeEvents(System.String[],System.String[])">
            <summary>
            Merges two list of event names into a single list.
            </summary>
            <param name="listA"></param>
            <param name="listB"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Control.MangleControlID(System.String,System.String)">
            <summary>
            Produces a mangled version of a control ID which should be unique
            </summary>
            <param name="controlId"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.ControlID">
            <summary>
            Gets or sets the unique ID for the Control.
            </summary>
            <remarks>The control ID must be unique on the Form. If you do not assign a control ID
            to a new control, one will be automatically assigned when the control is added to the Form.
            </remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.Position">
            <summary>
            Controls the relative position of the control within its parent container.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.Left">
            <summary>
            Gets or sets the position of the left edge of the control relative to its container's
            client area.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.Right">
            <summary>
            Gets or sets the position of the right edge of the control relative to its container's
            client area.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.Top">
            <summary>
            Gets or sets the position of the top edge of the control relative to its container's
            client area.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.Bottom">
            <summary>
            Gets or sets the position of the bottom edge of the control relative to its container's
            client area.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.AbsolutePosition">
            <summary>
            Controls the absolute position of the element within the document.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.Size">
            <summary>
            Gets or sets the size of a control.
            </summary>
            <remarks>The size specified by this property is measured in pixels.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.Bounds">
            <summary>
            Gets the Rectangle that bounds this control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.ZIndex">
            <summary>
            Controls the stacking order of the control. Controls with high ZIndex appear on top 
            over controls with lower ZIndex.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.AllowCutCopyDelete">
            <summary>
            Indicates if this control can be cut, copied or deleted.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.AllowPositioning">
            <summary>
            Indicates if this control can be cut, copied or deleted.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.AllowDesign">
            <summary>
            Indicates if the control should show up in the designer so it's properties can
            be manipulated directly.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.HTMLElement">
            <summary>
            Returns the underlying HTML element for the control. This method is intended
            for use within Encompass only.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.HTMLElement2">
            <summary>
            Returns the underlying HTML element for the control using the IHTMLElement2 interface
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.ContextMenuPosition">
            <summary>
            Returns the ContextMenu position from the last context menu event. This is
            an absolute position within the document.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Control.Form">
            <summary>
            Returns the parent Form control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.#ctor">
            <summary>
            Default constructor for the RuntimeControl.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.MoveTo(EllieMae.Encompass.Forms.Location)">
            <summary>
            Moves the control to a new location on the form.
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.EnsureVisible">
            <summary>
            Ensures that the control is visible on the screen.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.OnStartEditing">
            <summary>
            Notifies the control that the form is going into edit mode
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.OnContainerInteractiveStateChanged(System.Boolean)">
            <summary>
            Invoked when the control's container's enabled state changes. This allows
            the control to perform some custom code in place of or in addition to
            disabling itself.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.OnContainerVisibilityStateChanged(System.Boolean)">
            <summary>
            Invoked when the control's container's enabled state changes. This allows
            the control to perform some custom code in place of or in addition to
            disabling itself.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.ChangeControlVisibilityState(System.Boolean)">
            <summary>
            Sets the visiblity state of a control.
            </summary>
            <param name="visible"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.ChangeControlInteractiveState(System.Boolean)">
            <summary>
            Override this method to perform whatever control-specific functionality
            must be performed when the control is enabled/disabled.
            </summary>
            <param name="interactive"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.GetEnablingTargetElement">
            <summary>
            Returns the HTML element that should be used to enable/disable the control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.PrepareForDisplay">
            <summary>
            Performs all of the final pre-render activities before the control is displayed.
            When this method is called, you can assume the entire control tree has already been
            established. This method will be invoked starting at the lowest-level controls
            and working its way up the control tree.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.OnContainerChanged">
            <summary>
            When the control's container changes, we need to update the interactivity state of the control
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RuntimeControl.ApplyInteractiveState">
            <summary>
            Enables or disables the control using the control hierarchy rules
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RuntimeControl.Position">
            <summary>
            Override of the base Control class Position property to ensure that the 
            control doesn't have Flow layout.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RuntimeControl.Visible">
            <summary>
            Controls the visibility of the control
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RuntimeControl.Enabled">
            <summary>
            Gets or sets whether the control will respond to user input.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RuntimeControl.Interactive">
            <summary>
            Gets a value which indicates if the control is in an interactive state.
            </summary>
            <remarks>A control is interactive if both it and all container
            controls in which it resides are enabled.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RuntimeControl.AllowInteractivity">
            <summary>
            Determines if the control can be set into an interactive state
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RuntimeControl.IsContainerVisible">
            <summary>
            Determines if the control's container is visible
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.BorrowerLink.#ctor">
            <summary>
            Constructor for a new BorrowerLink control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.BorrowerLink.DisplayImage(System.Boolean)">
            <summary>
            Changes the image on the button.
            </summary>
            <param name="strongLink">Indicates whether the link is strong link or not.</param>
            <remarks>This method is for use by the Encompass application framework
            and should not be invoked by external applications.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.BorrowerLink.BorrowerType">
            <summary>
            Gets or sets whether to pop up the Rolodex for Borrower or CoBorrower
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.BoundedControl">
            <summary>
            A BoundedControl represents a control with a border.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.BoundedControl.#ctor">
            <summary>
            Default constructor for the BoundedControl.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.BoundedControl.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.BoundedControl.BorderWidth">
            <summary>
            The width of the border around the control
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.BoundedControl.BorderColor">
            <summary>
            The color of the border around the control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Button">
            <summary>
            Reprents a button control on an input form.
            </summary>
            <remarks>The button control is used to either trigger a default <see cref="P:EllieMae.Encompass.Forms.Button.Action"/>
            when clicked or to invoke user-desfined code via the <see cref="E:EllieMae.Encompass.Forms.Button.Click"/> event.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ContentControl">
            <summary>
            Represents a control which contains textual content.
            </summary>
            <remarks>Content controls provide properties that have to do with formatting and
            display text-based content, such as font information.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContentControl.#ctor">
            <summary>
            Default constructor for the ContentControl.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContentControl.Font">
            <summary>
            Gets or sets the <see cref="T:EllieMae.Encompass.Forms.HTMLFont"/> used to render the text of the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContentControl.SupportsFont">
            <summary>
            Indicates if the control supports setting the Font property.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContentControl.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContentControl.SupportsBackColor">
            <summary>
            Indicates if the control supports setting the BackColor property.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContentControl.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <remarks>The foreground color of a control determines the color of the font.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContentControl.SupportsForeColor">
            <summary>
            Indicates if the control supports setting the ForeColor property.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ISupportsClickEvent">
            <summary>
            Interface signaling that the control supports the Click event
            </summary>
            <exclude/>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ISupportsEvents">
            <summary>
            Marker interface to indicate the type supports one or more events
            </summary>
            <exclude/>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ISupportsEvents.SupportedEvents">
            <summary>
            Provides a list of the names of the events supported by the control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsClickEvent.InvokeClick">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsClickEvent.Click">
            <summary>The Click event provided by controls such as the <see cref="T:EllieMae.Encompass.Forms.Button"/> control.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.IActionable">
            <summary>
            Interface for controls that provide an Action property.
            </summary>
            <exclude/>
        </member>
        <member name="P:EllieMae.Encompass.Forms.IActionable.Action">
            <summary>
            Gets or sets the action to be performed by the control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Button.#ctor">
            <summary>
            Default cosntructor for a new Button control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Button.InvokeClick">
            <summary>
            This function is intended for use by the Encompass framework only.
            </summary>
            <returns></returns>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Button.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event on the Button control.
            </summary>
            <param name="e">The EventArgs for the event.</param>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Button.Click">
            <summary>
            Event fired when the user clicks the button.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Button.Text">
            <summary>
            Gets or sets the text on the button.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Button.AutoSize">
            <summary>
            Gets or sets whether the button will automatically size itself to it contents.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Button.Action">
            <summary>
            Gets or sets the pre-defined action associated with the button.
            </summary>
            <remarks>For a list of the possible pre-defined actions which can be associated with
            a button, see the Encompass Input Form Builder documentation.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Button.HoverText">
            <summary>
            Gets or sets the text that appears when the mouse is hovered over the button.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Button.SupportedEvents">
            <summary>
            Gets the list of events supported by the Button control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Calendar">
            <summary>
            Provides a button which can be used to display a pop-up calendar from which the user can select a date.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ISupportsDateSelectedEvent">
            <summary>
            Interface signaling that the control support the FocusIn and FocusOut events
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsDateSelectedEvent.InvokeDateSelected(System.DateTime)">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsDateSelectedEvent.DateSelected">
            <summary>The Format event, used to allow on-the-fly formatting of text in textboxes.</summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Calendar.#ctor">
            <summary>
            Constructor for a new ContactButton control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Calendar.InvokeDateSelected(System.DateTime)">
            <summary>
            Invokes the Click event on the control.
            </summary>
            <returns>This method is intended for use within the Encompass framework only.</returns>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Calendar.OnDateSelected(EllieMae.Encompass.Forms.DateSelectedEventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.Calendar.DateSelected"/> event on the control.
            </summary>
            <param name="e">The event arguments passed to the event handlers.</param>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Calendar.DateSelected">
            <summary>
            The Click event is fired when the user clicks the icon for the ContactButton.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Calendar.DateField">
            <summary>
            Gets or sets the field that will be used to populate the Last Name information of the contact record.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Calendar.FieldSource">
            <summary>
            Gets or sets the source of data for this loan field.
            </summary>
            <remarks>This property is currently not used and should not be modified.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Calendar.HoverText">
            <summary>
            Gets or sets the tooltip displayed when the mouse is hovered over the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Calendar.AccessMode">
            <summary>
            Gets/Sets the access mode for the field
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Calendar.SupportedEvents">
            <summary>
            Gets the list of events supported by this control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Calendar.AllowInteractivity">
            <summary>
            Overrides the function thate determines if the control should be displayed in interactive mode
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.CategoryBox">
            <summary>
            A CategoryBox represents a <see cref="T:EllieMae.Encompass.Forms.ContainerControl"/> which is formatted to appear
            stylistically consistent with the top-level sections of an Encompass input form.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.SectionControl">
            <summary>
            A Section Control represents a <see cref="T:EllieMae.Encompass.Forms.ContainerControl"/> which includes a header
            region which can contain text.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ContainerControl">
            <summary>
            Provides a base class for all controls which can contain other controls.
            </summary>
            <remarks>A Container control is used to group and maniupate sets of controls.
            Controls are added or removed from a container control via its <see cref="P:EllieMae.Encompass.Forms.ContainerControl.Controls"/>
            property. Every control on the input form must belong to a container, with the exception
            of the <see cref="T:EllieMae.Encompass.Forms.Form"/> control, which is the top-most container control in the control
            hierarchy.
            </remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContainerControl.#ctor">
            <summary>
            Constructor for a new Contaienr Control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContainerControl.Refresh">
            <summary>
            Forces the control and all if its child controls to reload their state.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContainerControl.ClientHitTest(System.Drawing.Point)">
            <summary>
            Tests if a point is within the client area of a control.
            </summary>
            <param name="pt">The point to be tested, expressed in absolute form coordinates.</param>
            <returns>Returns <c>true</c> if the point is within the client area,
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContainerControl.PointToAbsolute(System.Drawing.Point)">
            <summary>
            Converts a Point object expressed in coordinates relative to this control's
            client region to an absolute position in the form.
            </summary>
            <param name="pt">The point to convert.</param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContainerControl.PointToClient(System.Drawing.Point)">
            <summary>
            Converts a Point expressed in absolute form coordinates to a point relative to
            the client area of the control.
            </summary>
            <param name="pt">The point to convert.</param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContainerControl.RectangleToAbsolute(System.Drawing.Rectangle)">
            <summary>
            Converts a Point object expressed in coordinates relative to this control
            to an absolute position in the form.
            </summary>
            <param name="rect">The Rectangle to convert.</param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContainerControl.RectangleToClient(System.Drawing.Rectangle)">
            <summary>
            Converts a Point expressed in absolute form coordinates to a point relative to
            the client area of the control.
            </summary>
            <param name="rect">The Rectangle to convert.</param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContainerControl.GetContainerAtPoint(System.Drawing.Point)">
            <summary>
            Locates a child container that includes a specified point
            </summary>
            <param name="pt">The point is an absolute position on the form.</param>
            <returns>Returns the most-nested container control at the specified point.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContainerControl.PrepareForDisplay">
            <summary>
            Check if the form is in edit mode and make sure our setting matches
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContainerControl.Controls">
            <summary>
            Gets the collection of controls which are held within the container.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContainerControl.Layout">
            <summary>
            Gets or sets the relative position of the control within its parent container.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContainerControl.AllowPositioning">
            <summary>
            Indicates if this control can be cut, copied or deleted.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContainerControl.ClientOffset">
            <summary>
            Gets the absolute position of the client area of the container control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContainerControl.ClientSize">
            <summary>
            Gets the size of the client area of the container control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContainerControl.ClientRectangle">
            <summary>
            Gets the client rectangle for the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContainerControl.ContentEditable">
            <summary>
            Gets the ContentEditable property of the control
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.SectionControl.#ctor">
            <summary>
            Default constructor for a new Section control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.SectionControl.Title">
            <summary>
            Gets or sets the text that appears in the header of the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.SectionControl.HeaderFont">
            <summary>
            Gets or sets the <see cref="T:EllieMae.Encompass.Forms.HTMLFont"/> used for the header of the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.SectionControl.HeaderBackColor">
            <summary>
            Gets or sets the background color of the header region of the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.SectionControl.HeaderForeColor">
            <summary>
            Gets or sets the foreground/font color used in the header region of the control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.CategoryBox.#ctor">
            <summary>
            Constructor for a new Categorybox control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.CheckBox">
            <summary>
            Provides checkbox functionality for an Encompass input form.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.FieldControl">
            <summary>
            A Control which allows for binding to loan file to display and allow the editing of loan values.
            </summary>
            <remarks>
            <p>The FieldControl provides the the primary functionality of an Encompass input form: the viewing and
            editing of loan file data. When a FieldControl's <see cref="P:EllieMae.Encompass.Forms.FieldControl.Field"/> property is set, Encompass
            autoamtically binds the control to the underlying loan using the field. As a result, the field's value
            is automatically populated into the control when the form is loaded and, conversely, any changes
            made to the control's value are automatically propogated back into the underlying loan field.</p>
            <p>In some cases you may want to directly intercede in the data binding process so you can determine
            the displayable representation of a field's value within the control. To allow for such cases, 
            FieldControl's <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataBind"/> and <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataCommit"/> event can be used. These events
            are triggered whenever the Encompass application needs to update the control's displayed value
            with the underlying field value or when it needs to save the control's value back into the loan.
            Within your event handlers you can perform any transaltion or effect any side effects that are
            needed during the bindign process.</p>
            </remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ISupportsDataBindEvent">
            <summary>
            Interface signaling that the control supports the DataBind event
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsDataBindEvent.InvokeDataBind(System.String@)">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsDataBindEvent.InvokeDataCommit(System.String@)">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsDataBindEvent.DataBind">
            <summary>The DataBind event, used by FieldControls to bind data from the underlying
            loan into the control.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsDataBindEvent.DataCommit">
            <summary>The DataCommit event, used by FieldControls to persist data from control
            into the underlying loan.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ISupportsFocusEvent">
            <summary>
            Interface signaling that the control support the FocusIn and FocusOut events
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsFocusEvent.InvokeFocusIn">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsFocusEvent.InvokeFocusOut">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsFocusEvent.FocusIn">
            <summary>The FocusIn event, which indicates when a FieldControl has gained the cursor focus.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsFocusEvent.FocusOut">
            <summary>The FocusOut event, which indicates when a FieldControl has lost the cursor focus.</summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.#ctor">
            <summary>
            Constructor for a new FieldControl.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.Focus">
            <summary>
            Sets the focus to the field of the control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.Blur">
            <summary>
            Removes the focus from this control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.InvokeFocusIn">
            <summary>
            Invokes the FocusIn event and modifies the field to display its focus state.
            </summary>
            <remarks>This method is invoked by the Encompass framework and is not intended
            for use by external applications.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.InvokeFocusOut">
            <summary>
            Modifies the appearance of the control, if appropriate, to indicate that it
            is not the currently active control.
            </summary>
            <remarks>This method is invoked by the Encompass framework and is not intended
            for use by external applications.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.MoveNext">
            <summary>
            Moves to the next field in the tab order.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.MovePrevious">
            <summary>
            Moves to the previous field in the tab order.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.BindTo(System.String)">
            <summary>
            Binds the fields to a particular value. This method causes the field to
            be populate with the specified value, if possible.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.DisplayValue(System.String)">
            <summary>
            Methods for performing the actual data binding
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.Rebind">
            <summary>
            Re-binds the control to its existing value
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.InvokeDataBind(System.String@)">
            <summary>
            Invokes the DataBind event.
            </summary>
            <remarks>This method is meant for internal use within Encompass only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.OnDataBind(EllieMae.Encompass.Forms.DataBindEventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataBind"/> event.
            </summary>
            <param name="e">The event arguments for the event.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.InvokeDataCommit(System.String@)">
            <summary>
            Invokes the DataBind event.
            </summary>
            <remarks>This method is meant for internal use within Encompass only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.OnDataCommit(EllieMae.Encompass.Forms.DataCommitEventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataCommit"/> event.
            </summary>
            <param name="e">The event arguments for the event.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldControl.RefreshProperties">
            <summary>
            Prepares the control for display
            </summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.FieldControl.DataBind">
            <summary>
            Event to support custom data binding behavior.
            </summary>
            <remarks>Use the DataBind and <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataCommit"/> events to override the default binding behavior between
            a FieldControl and the underlying loan. Note that this event will only be raised if the
            <see cref="P:EllieMae.Encompass.Forms.FieldControl.Field"/> property is set to a valid Encompass field.</remarks>
        </member>
        <member name="E:EllieMae.Encompass.Forms.FieldControl.DataCommit">
            <summary>
            Event to support custom data commital behavior.
            </summary>
            <remarks>Use the <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataBind"/> and DataCommit events to override the default binding behavior between
            a FieldControl and the underlying loan. Note that this event will only be raised if the
            <see cref="P:EllieMae.Encompass.Forms.FieldControl.Field"/> property is set to a valid Encompass field.</remarks>
        </member>
        <member name="E:EllieMae.Encompass.Forms.FieldControl.FocusIn">
            <summary>
            Event indicating that the control has obtained the cursor focus.
            </summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.FieldControl.FocusOut">
            <summary>
            Event indicating that the control has lost the cursor focus.
            </summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.FieldControl.ValueChanged">
            <summary>
            Event indicating that the value of the control has changed.
            </summary>
            <remarks>This event is meant for use within the Encompass framework only.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.Field">
            <summary>
            Gets or sets the field for the current control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.Enabled">
            <summary>
            Overrides the Enabled property.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.FieldSource">
            <summary>
            Gets or sets the source of data for this loan field.
            </summary>
            <remarks>This property is currently not used and should not be modified.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.HoverText">
            <summary>
            Gets or sets the HoverText for the field.
            </summary>
            <remarks>If this property is set it will override any value set into the
            <see cref="P:EllieMae.Encompass.Forms.FieldControl.HelpKey"/> property.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.HelpKey">
            <summary>
            Gets or sets the HelpKey used to determine the hover help for a control.
            </summary>
            <remarks>Help keys are defined by the Encompass system and used as a lookup into
            a master help file. You can explicitly define the hovertext to be displayed using the
            <see cref="P:EllieMae.Encompass.Forms.FieldControl.HoverText"/> property.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.TabIndex">
            <summary>
            Gets or sets the Tab Index of the control
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.Lockable">
            <summary>
            Indicates if this control type supports locking with a FieldLock control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.Value">
            <summary>
            Gets the current value of the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.AccessMode">
            <summary>
            Gets/Sets the access mode for the field
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.HasFocus">
            <summary>
            Indicates if the field currently has the input focus.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.SupportedEvents">
            <summary>
            Provides the list of events supported by the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldControl.AllowInteractivity">
            <summary>
            Overrides the function thate determines if the control should be displayed in interactive mode
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.CheckBox.#ctor">
            <summary>
            Constructor for a new CheckBox control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.CheckBox.InvokeClick">
            <summary>
            Invokes the Click event.
            </summary>
            <returns>Always returns <c>true</c>.</returns>
            <remarks>This method is intended for use within Encompass only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.CheckBox.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.CheckBox.Click"/> event.
            </summary>
            <param name="e">The event arguments to be passed to the event handlers.</param>
        </member>
        <member name="E:EllieMae.Encompass.Forms.CheckBox.Click">
            <summary>
            Event which is raised when the user selects or deselects the checkbox.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CheckBox.Field">
            <summary>
            Gets or sets the Field associated with this control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CheckBox.Text">
            <summary>
            Gets or Sets the text associated with the Checkbox.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CheckBox.CheckedValue">
            <summary>
            The value that the underlying field will take on whehn this checkbox is checked.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CheckBox.UncheckedValue">
            <summary>
            The value that the underlying field will take on whehn this checkbox is checked.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CheckBox.BehaveAsRadio">
            <summary>
            Indicates if the checkbbox should behave like a radio button.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CheckBox.Checked">
            <summary>
            Gets/Sets the checked state of the radio buttons
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CheckBox.Value">
            <summary>
            Gets the current value of the checkbox based on the checked state of the object.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CheckBox.SupportedEvents">
            <summary>
            Gets the list of events supported by this control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.CodeBase">
            <summary>
            Represents the definition of a codebase assembly for an Encompass input form.
            </summary>
            <remarks>A codebase assembly can be attached to an Encompass input form to provide even grater
            extensions of an input form's functionality beyond what would be permitted simply using the
            Encompass Form Builder.</remarks>
        </member>
        <member name="F:EllieMae.Encompass.Forms.CodeBase.Empty">
            <summary>
            Represents an Empty codebase, where no assembly is specified.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.CodeBase.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor from an existing assembly on the local disk.
            </summary>
            <param name="assemblyPath">The path to the assembly file.</param>
            <param name="assemblyName">The full name of the assembly.</param>
            <param name="assemblyVersion">The assembly's version.</param>
            <param name="className">The full name of the class within the assembly, including namespace,
            which acts as the codebase for the form.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.CodeBase.ToString">
            <summary>
            Provides a string representation of the CodeBase object.
            </summary>
            <returns>Returns the name of the assembly and class.</returns>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CodeBase.AssemblyName">
            <summary>
            Gets the name of the codebase assembly.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CodeBase.AssemblyVersion">
            <summary>
            Gets the version information for the codebase assembly.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CodeBase.ClassName">
            <summary>
            Gets the full name of the class which acts as the form's codebase.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.CodeBase.AssemblyPath">
            <summary>
            Returns the local path of the codebase assembly.
            </summary>
            <remarks>This property's value may or may not be valid. It is set at the time the codebase
            is initially attached to the form.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ContactButton">
            <summary>
            Provides a button which can be used to create entries in the loan's Conversation log.
            </summary>
            <remarks>When a ContactButton control is created you will want to set the 
            <see cref="P:EllieMae.Encompass.Forms.ContactButton.ContactMethod"/> and various name/contact info-related fields. When the user
            clicks the button a new Conversation Log entry is created and the data associated with
            the fields specified by these properties are automatically populated into the log.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContactButton.#ctor">
            <summary>
            Constructor for a new ContactButton control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContactButton.InvokeClick">
            <summary>
            Invokes the Click event on the control.
            </summary>
            <returns>This method is intended for use within the Encompass framework only.</returns>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ContactButton.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.ContactButton.Click"/> event on the control.
            </summary>
            <param name="e">The event arguments passed to the event handlers.</param>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ContactButton.Click">
            <summary>
            The Click event is fired when the user clicks the icon for the ContactButton.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContactButton.ContactMethod">
            <summary>
            Gets or sets the method by which the individual will be contacted.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContactButton.CompanyField">
            <summary>
            Gets or sets the field that will be used to populate the Last Name information of the contact record.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContactButton.LastNameField">
            <summary>
            Gets or sets the field that will be used to populate the Last Name information of the contact record.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContactButton.FirstNameField">
            <summary>
            Gets or sets the field that will be used to populate the First Name information of the contact record.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContactButton.PhoneField">
            <summary>
            Gets or sets the field that will be used to populate the phone number of the contact record.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContactButton.EmailField">
            <summary>
            Gets or sets the field that will be used to populate the email address of the contact record.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContactButton.HoverText">
            <summary>
            Gets or sets the tooltip displayed when the mouse is hovered over the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ContactButton.SupportedEvents">
            <summary>
            Gets the list of events supported by this control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ControlCache">
            <summary>
            Summary description for ControlCache.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ControlCollection">
            <summary>
            Represnets the collection of controls associated with a <see cref="T:EllieMae.Encompass.Forms.ContainerControl"/>.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlCollection.Insert(EllieMae.Encompass.Forms.Control)">
            <summary>
            Adds a new control to the control container.
            </summary>
            <param name="control">The control to be added.</param>
            <remarks>The control can be a new control or an existing control, in which
            case the control will be removed from its current container and placed into
            this new container.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlCollection.Insert(EllieMae.Encompass.Forms.Control,System.Drawing.Point)">
            <summary>
            Inserts a control into the container.
            </summary>
            <param name="control">The control to be inserted.</param>
            <param name="position">The relative position of the control within the
            new container.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlCollection.InsertAbsolute(EllieMae.Encompass.Forms.Control,System.Drawing.Point)">
            <summary>
            Inserts a control into the container and places it at an absolute position.
            </summary>
            <param name="control">The control to be inserted.</param>
            <param name="absolutePosition">The position to place the control, in absolute
            form coordinates.</param>
            <remarks>If the coordinates provided are outside the client area of the container,
            the control will be placed as instructed but will still be contained in the
            container control).</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlCollection.Remove(EllieMae.Encompass.Forms.Control)">
            <summary>
            Removes a control from the container and deletes it.
            </summary>
            <param name="control">The control to be removed.</param>
            <remarks>The removed control is no longer valid and should
            be considered disposed.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlCollection.Contains(System.String)">
            <summary>
            Determines if a control is contained in the control hierarchy beneath this
            container control.
            </summary>
            <param name="controlId">The ID of the control to test.</param>
            <returns>Returns <c>true</c> if the control is within the container (or any
            nested subcontainer), <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlCollection.Find(System.String)">
            <summary>
            Finds a nested control within the container.
            </summary>
            <param name="controlId">The ID of the control to find.</param>
            <returns>Returns the control if it is found in the current container or
            any subcontainer, <c>null</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlCollection.FindByType(System.Type)">
            <summary>
            Finds the set of controls of a specified type that are nested within the
            container.
            </summary>
            <param name="type">The type of controls to find.</param>
            <returns>Returns an array containing the controls which derive from the
            specified type and are contained within the container (and any nested subcontainers).
            </returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlCollection.SelectAll">
            <summary>
            Selects all controls within the collection.
            </summary>
            <remarks>This method cannot be used at runtime and is meant only for use within the
            Encompass Form Builder.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlCollection.GetEnumerator">
            <summary>
            Provides an enumerator over the set of controls.
            </summary>
            <returns>An IEnumerator whcih can be used to iterate over the control collection.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of this collection to the specified array starting at the given index;
            </summary>
            <param name="array">The array to add the controls to.</param>
            <param name="index">The starting index to which the controls will be copied.</param>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlCollection.Item(System.Int32)">
            <summary>
            Gets a control from the collection by index.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlCollection.Count">
            <summary>
            Gets the number of controls in the collection.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlCollection.IsSynchronized">
            <summary>
            Indicates if this collection is thread-safe. This propery will always return <c>false</c>.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlCollection.SyncRoot">
            <summary>
            Provides a synchronization object for the collection
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ControlEvent">
            <summary>
            Represents the definition of an event handler for a control's event.
            </summary>
            <remarks>This class is used by the Encompass Form Builder and intended for use
            at design time only. Attempts to modify this object properties at runtime will result in
            exceptions or unexpected behavior.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlEvent.Delete">
            <summary>
            Deletes the event handler from the Form.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlEvent.Equals(System.Object)">
            <summary>
            Compares two ControlEvent objects for equality.
            </summary>
            <param name="obj">The object to which to compare the current object.</param>
            <returns>Returns <c>true</c> if the two objects are equivalent, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlEvent.GetHashCode">
            <summary>
            Provides a has code for the class.
            </summary>
            <returns>A integral has code for the object.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlEvent.ToString">
            <summary>
            Provides a string representation of the event.
            </summary>
            <returns>Returns a string indicating if the event is populated.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlEvent.CompareTo(System.Object)">
            <summary>
            Provides a comparison operation for the ControlEvent.
            </summary>
            <param name="obj">The ControlEvent to which to compare the current event.</param>
            <returns>Compares the objects based first on the control ID and then on the event
            name, sorting alphabetically in both cases.</returns>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlEvent.ControlID">
            <summary>
            The ControlID of the <see cref="T:EllieMae.Encompass.Forms.Control"/> object with which the event is associated.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlEvent.EventType">
            <summary>
            The name of event for which this object contains the definition.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlEvent.Language">
            <summary>
            Gets the language for the event handler.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlEvent.EventCode">
            <summary>
            Gets the source code for the event handler.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ScriptLanguage">
            <summary>
            Enuemration of the coding languages supported by the Form Builder.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.ScriptLanguage.None">
            <summary>No coding language specified</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.ScriptLanguage.CSharp">
            <summary>C#</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.ScriptLanguage.VB">
            <summary>VB.NET</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ControlEvents">
            <summary>
            Represents the collection of control event handlers defined on the Form.
            </summary>
            <remarks>This class is used by the Encompass Form Builder and intended for use
            at design time only. Attempts to modify this object properties at runtime will result in
            exceptions or unexpected behavior.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlEvents.GetEvent(System.String,System.String)">
            <summary>
            Retrieves the event code for a specific control and event type.
            </summary>
            <param name="controlId">The Control ID of the owner control.</param>
            <param name="eventType">The name of the event.</param>
            <returns>Returns the code for the event.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlEvents.CreateNew(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:EllieMae.Encompass.Forms.ControlEvent"/> for the specified control and event type.
            </summary>
            <param name="controlId">The ControlID for the control on which the event will occur.</param>
            <param name="eventType">The name of the event for which the handler is specified.</param>
            <returns>Returns a new <see cref="T:EllieMae.Encompass.Forms.ControlEvent"/> for the control and event type.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlEvents.Remove(System.String,System.String)">
            <summary>
            Removes an event handler definition from the collection.
            </summary>
            <param name="controlId">The ControlID of the target Control.</param>
            <param name="eventType">The name of the event for which the handler is triggered.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlEvents.Clear">
            <summary>
            Removes all event definitions.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlEvents.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Provides an enumerator for the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlEvents.Language">
            <summary>
            Gets or sets the <see cref="T:EllieMae.Encompass.Forms.ScriptLanguage"/> used for the event handlers defined in the form.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlEvents.Count">
            <summary>
            Gets the number of control event handlers in the collection.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ControlSelection">
            <summary>
            Represents the set of currently selected controls in the Encompass Form Builder.
            </summary>
            <remarks>This class is not intended for use outside of the Encompass Form Builder.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.GetEnumerator">
            <summary>
            Provides an enumerator for the set of selected controls.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.Contains(EllieMae.Encompass.Forms.Control)">
            <summary>
            Checks of a control is contained in the collection.
            </summary>
            <param name="control">The control to check for.</param>
            <returns>Returns <c>true</c> if the control is selected, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.AllowCutCopyDelete">
            <summary>
            Determines if the entire set of selected controls supports the Cut, Copy and Delete operations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.AllowPositioning">
            <summary>
            Determines if the entire set of controls supports positioning on the form.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.Clear">
            <summary>
            Clears the set of selected controls, causing all controls to be unselected.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.Add(EllieMae.Encompass.Forms.Control)">
            <summary>
            Adds a new control to the selected control list.
            </summary>
            <param name="control">The control to be selected.</param>
            <remarks>All existing selected controls remain selected.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.AddRange(System.Collections.IEnumerable)">
            <summary>
            Adds a set of controls to the collection of selected controls.
            </summary>
            <param name="controls">An enumerable list of controls to be selected.</param>
            <remarks>Invoking this method is more efficient than invoking the <see cref="M:EllieMae.Encompass.Forms.ControlSelection.Add(EllieMae.Encompass.Forms.Control)"/>
            method for each control individually.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.AddRange(System.Collections.IEnumerable,System.Boolean)">
            <summary>
            Adds a set of controls to the collection of selected controls.
            </summary>
            <param name="controls">An enumerable list of controls to be selected.</param>
            <param name="recurse">Indicates if the sub-controls of the current control should be selected.</param>
            <remarks>Invoking this method is more efficient than invoking the <see cref="M:EllieMae.Encompass.Forms.ControlSelection.Add(EllieMae.Encompass.Forms.Control)"/>
            method for each control individually.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.ReplaceRange(System.Collections.IEnumerable)">
            <summary>
            Replaces a range of controls in the selection.
            </summary>
            <param name="controls">The new set of controls to be selected.</param>
            <remarks>This method deselects the current set of controls and sets a new set as selected.
            </remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.SetReferenceControl(EllieMae.Encompass.Forms.Control)">
            <summary>
            Sets the reference control for operations that require one.
            </summary>
            <param name="c">The reference control to be used.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.ToControlArray">
            <summary>
            Converts the list of selected controls to a control array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.GetReferenceControl">
            <summary>
            Returns the current reference control for alignment operations.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.BringToFront">
            <summary>
            Moves all selected controls to the front of the stacking order.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.SendToBack">
            <summary>
            Sends all selected controls to the back of the stacking order.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.Copy">
            <summary>
            Creates a <see cref="T:EllieMae.Encompass.Forms.CopyBuffer"/> from the selected controls.
            </summary>
            <returns>The Copy method creates the buffer but does not modify the contents of the Form.
            </returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.Cut">
            <summary>
            Creates a <see cref="T:EllieMae.Encompass.Forms.CopyBuffer"/> from the selected controls and deletes them from the Form.
            </summary>
            <returns>Returns a <see cref="T:EllieMae.Encompass.Forms.CopyBuffer"/> created from the selected controls.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.Delete">
            <summary>
            Removes the selected controls from the Form.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.Align(EllieMae.Encompass.Forms.Alignment)">
            <summary>
            Aligns the selected controls with the reference control.
            </summary>
            <param name="alignment">The alignment method to use for this operation.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.MakeSameSize(EllieMae.Encompass.Forms.ResizeMethod)">
            <summary>
            Resizes the selected controls to the size of the reference control.
            </summary>
            <param name="method">Determine which dimension(s) are to be resized.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.MoveTo(EllieMae.Encompass.Forms.Location)">
            <summary>
            Moves the selected controls to a specified position on the form.
            </summary>
            <param name="location">The position to move the controls.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.Move(System.Int32,System.Int32)">
            <summary>
            Moves the selected control by a fixed number of pixels.
            </summary>
            <param name="offsetX">The number of pixels to move horizontally.</param>
            <param name="offsetY">The number of pixels to move vertically.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.Resize(System.Int32,System.Int32)">
            <summary>
            Resizes all selectd control by the specified number of pixels.
            </summary>
            <param name="deltaWidth">The number of pixels by which to expand or contract the width.</param>
            <param name="deltaHeight">The number of pixels by which to expand or contract the height.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.MoveInto(EllieMae.Encompass.Forms.ContainerControl)">
            <summary>
            Moves the selected controls into the specified <see cref="T:EllieMae.Encompass.Forms.ContainerControl"/>.
            </summary>
            <param name="container">The ContainerControl into which the selected controls are to be moved.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ControlSelection.addControlsToRange(System.Collections.IEnumerable,mshtml.IHTMLControlRange,System.Boolean)">
            <summary>
            Adds a set of controls into a control range
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlSelection.Item(System.Int32)">
            <summary>
            Returns a selected control by index.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlSelection.Count">
            <summary>
            Gets the number of selected controls.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.CopyBuffer">
            <summary>
            Represents a clipboard which can be used to copy controls from one form to another (or to itself).
            </summary>
            <remarks>This class can only be used within the Encompass Form Builder.</remarks>
        </member>
        <member name="F:EllieMae.Encompass.Forms.CopyBuffer.Current">
            <summary>
            Represents the current CopyBuffer created by the last Cut or Copy operation.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.CopyBuffer.Paste(EllieMae.Encompass.Forms.ContainerControl)">
            <summary>
            Pastes the controls in the buffer into the specified container.
            </summary>
            <param name="container">The container control into which the buffer's controls are
            pasted.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.CopyBuffer.Paste(EllieMae.Encompass.Forms.ContainerControl,System.Drawing.Point)">
            <summary>
            Pastes the controls in the buffer into the specified container at the specified absolute position.
            </summary>
            <param name="container">The container control into which the buffer's controls are
            pasted.</param>
            <param name="pastePosition">The absolute position for the top-left location of the buffer
            when pasted.</param>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DesignerControl">
            <summary>
            Designer controls are used for design-time support only and do not appear at run time.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DesignerControl.#ctor">
            <summary>
            Constructor for a new DesignerControl.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.BaseDropdownTypeEditor">
            <summary>
            Provides a type editor which appears as a dropdown list in the property grid.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.BaseDropdownTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Overrides the editor style to be dropdown.
            </summary>
            <param name="pContext">The current contol context.</param>
            <returns>Always returns UITypeEditorEditStyle.DropDown.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.BaseDropdownTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Method which draws the dropdown box on the property grid.
            </summary>
            <param name="pContext">The current editing context.</param>
            <param name="pProvider">The current host service propvider.</param>
            <param name="pValue">The value being edited.</param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.BaseDropdownTypeEditor.TranslateValue(System.Object)">
            <summary>
            Translates a value from an interval value to a user-visible value.
            </summary>
            <param name="value">The value to be transalted</param>
            <returns>Returns the transation of the value.</returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.BizCategorySelector">
            <summary>
            Provides a type editor the allows selection of a Business Category.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.BizCategorySelector.TranslateValue(System.Object)">
            <summary>
            Performs translation on the selected value back to ensure the empty value is converted to null.
            </summary>
            <param name="value">The value to be translated</param>
            <returns></returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.CheckedValueEditor">
            <summary>
            Provides an editor for the CheckedValue property of a checkbox or RadioButton control.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.CheckedValueEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns the editor style of the control.
            </summary>
            <param name="pContext">The current control context.</param>
            <returns>The editor style to be used with the control.</returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.CodeBaseSelector">
            <summary>
            Provides the user interface for selecting a <see cref="T:EllieMae.Encompass.Forms.Form"/>'s CodeBase.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.CodeBaseSelector.#ctor(EllieMae.Encompass.Forms.CodeBase)">
            <summary>
            Constructor from a <see cref="P:EllieMae.Encompass.Forms.Design.CodeBaseSelector.CodeBase"/> object.
            </summary>
            <param name="codeBase"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.CodeBaseSelector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.CodeBaseSelector.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Design.CodeBaseSelector.CodeBase">
            <summary>
            Returns the CodeBase object based on the user's selections.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.CodeBaseEditor">
            <summary>
            Provides a UITypeEditor for the Form's CodeBase property to be used in the Property Grid.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.CodeBaseEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns the editor style for the type editor.
            </summary>
            <param name="context">The current control context.</param>
            <returns>This method always returns UITypeEditorEditStyle.Modal.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.CodeBaseEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Overrides the type editor's default bevahior to display the CodeBaseEditor.
            </summary>
            <param name="context">The current control context.</param>
            <param name="provider">The services provider.</param>
            <param name="value">The value beind edited.</param>
            <returns>Returns the new value based on the user's input.</returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.CodeLanguageEditor">
            <summary>
            Provides a TypeEditor for the CodeLanguage property on the <see cref="T:EllieMae.Encompass.Forms.Form"/> control.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.CodeLanguageEditor.TranslateValue(System.Object)">
            <summary>
            Translates a text value to the ScriptLanguage enumeration.
            </summary>
            <param name="value">The text value to translate.</param>
            <returns>Returns the corresponding ScriptLanguage enume value.</returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.TextBoxSelector">
            <summary>
            Provides a type editor for selecting a control from the Form's control list.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.TextBoxSelector.TranslateValue(System.Object)">
            <summary>
            Performs transaction on the selection value to convert Control.Empty to <c>null</c>.
            </summary>
            <param name="value">The value to translate.</param>
            <returns>Returns null if the value is Control.Empty, otherwise it returns the value itself.</returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.LockableControlSelector">
            <summary>
            Provides a type editor for selecting a control from the Form's control list.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.LockableControlSelector.TranslateValue(System.Object)">
            <summary>
            Performs transaction on the selection value to convert Control.Empty to <c>null</c>.
            </summary>
            <param name="value">The value to translate.</param>
            <returns>Returns null if the value is Control.Empty, otherwise it returns the value itself.</returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.ZipCodeTargetSelector">
            <summary>
            Provides a type editor for selecting a ZipCodeControl's target element.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.ZipCodeTargetSelector.TranslateValue(System.Object)">
            <summary>
            Performs transaction on the selection value to convert Control.Empty to <c>null</c>.
            </summary>
            <param name="value">The value to translate.</param>
            <returns>Returns null if the value is Control.Empty, otherwise it returns the value itself.</returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.NonExpandableControlTypeConverter">
            <summary>
            TypeConverter implementation that prevents a propert from expanding in the Property Grid.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.NonExpandableControlTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines if the specified type specified by the sourceType can be converted by this converter.
            </summary>
            <param name="context"></param>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.NonExpandableControlTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts an object from one type to another.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.NonExpandableControlTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Indicates if converstions from the component type to the specified destinationType are permitted.
            </summary>
            <param name="context"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.NonExpandableControlTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Performs conversion to the specified detination type.
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.DropdownOptionsDialog">
            <summary>
            Provides a visual editor for the DropdownOptions collection associated with a control.
            </summary>
            <exclude/>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Design.DropdownOptionsDialog.options">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.DropdownOptionsDialog.#ctor(EllieMae.Encompass.Forms.DropdownOptionCollection)">
            <summary>
            Constructor for the dialog using a DropdownOptionCollection.
            </summary>
            <param name="options">The options collection to be edited.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.DropdownOptionsDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.DropdownOptionsDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.DropdownOptionsEditor">
            <summary>
            The UITypeEditor implementation to allow for use of the <see cref="T:EllieMae.Encompass.Forms.Design.DropdownOptionsEditor"/>
            in the Property Grid.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.DropdownOptionsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Overrides the edit style to use a modal dialog.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.DropdownOptionsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Invokes the <see cref="T:EllieMae.Encompass.Forms.Design.DropdownOptionsEditor"/> dialog when the user selects to edit
            a dropdown option list.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.EMEventEditor">
            <summary>
            Provides a UITypeEditor for control events.
            </summary>
            <remarks>This class and its properties and methods are meant for use within the
            Encompass Form Builder class only</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EMEventEditor.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EMEventEditor.SetEventType(System.String)">
            <summary>
            Sets the name of the event being edited.
            </summary>
            <param name="eventType">The event name.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EMEventEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Sets the editor style to be a modal dialog (the event editor).
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EMEventEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Displays the event editor for a particular control's event.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EMEventEditor.ShowEventEditor(EllieMae.Encompass.Forms.Control)">
            <summary>
            Static method for opening the event editor.
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EMEventEditor.ShowEventEditor(EllieMae.Encompass.Forms.Control,System.String)">
            <summary>
            Displays the event editor for a specific control event.
            </summary>
            <param name="control"></param>
            <param name="eventType"></param>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.EventEditorHandler">
            <summary>
            Delegate for event handlers listening for the EventEditor event.
            </summary>
            <exclude/>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.EventCodeEditorArgs">
            <summary>
            Event arguments class for the Form's EventEditor event.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EventCodeEditorArgs.#ctor(EllieMae.Encompass.Forms.Control,EllieMae.Encompass.Forms.ControlEvent)">
            <summary>
            Constructor for the EventCodeEditorArgs class.
            </summary>
            <param name="control"></param>
            <param name="currentEvent"></param>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Design.EventCodeEditorArgs.CurrentControl">
            <summary>
            Returns the control that should be selected in the event editor.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Design.EventCodeEditorArgs.CurrentEvent">
            <summary>
            Returns the event that should be selected in the event editor.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.EventsTab">
            <summary>
            Represents the Events tab in the Property Grid of the Form Builder.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EventsTab.GetProperties(System.Object,System.Attribute[])">
            <summary>
            Provides the property descriptors for the events tab.
            </summary>
            <param name="component"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EventsTab.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Provides the event descriptors for a control that supports events.
            </summary>
            <param name="context"></param>
            <param name="component"></param>
            <param name="attributes"></param>
            <returns></returns>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Design.EventsTab.TabName">
            <summary>
            Gets the display name of the tab.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Design.EventsTab.Bitmap">
            <summary>
            Gets the bitmap image for display in the Property Grid for the tab.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.EventPropertyDescriptor">
            <summary>
            Provides a property descriptor for use with Form control events.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EventPropertyDescriptor.#ctor(System.String,System.ComponentModel.CategoryAttribute)">
            <summary>
            Constructor of the EventPropertyDescriptor class.
            </summary>
            <param name="eventString"></param>
            <param name="category"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EventPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Returns the ControlEvent for the descriptor.
            </summary>
            <param name="component"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EventPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the control event for the descriptor.
            </summary>
            <param name="component"></param>
            <param name="value"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EventPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Abstract member override
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EventPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            This is not a resettable property.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EventPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            This property doesn't participate in code generation.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.EventPropertyDescriptor.GetEditor(System.Type)">
            <summary>
            Provides the editor for the property, which is the <see cref="T:EllieMae.Encompass.Forms.Design.EMEventEditor"/>.
            </summary>
            <param name="editorBaseType"></param>
            <returns></returns>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Design.EventPropertyDescriptor.PropertyType">
            <summary>
            Returns the type of the property values.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Design.EventPropertyDescriptor.ComponentType">
            <summary>
            The type of component the framework expects for this property.
            </summary>	
        </member>
        <member name="P:EllieMae.Encompass.Forms.Design.EventPropertyDescriptor.IsReadOnly">
            <summary>
            Indicates that the property is read/write.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.FieldSelector">
            <summary>
            Provides the Field Selection user interface used within the Encompass Form Builder.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.FieldSelector.#ctor">
            <summary>
            Default constructor for the FieldSelector dialog.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.FieldSelector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.FieldSelector.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.FieldSelector.RefreshCustomFields">
            <summary>
            Refreshes the Custom Fields list to ensure it's up-to-date.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.FieldSelector.ShowDialog(System.Windows.Forms.Form,EllieMae.Encompass.BusinessObjects.Loans.FieldDescriptor)">
            <summary>
            Displays the Form Selector disalog modally and pre-selects the specified field.
            </summary>
            <param name="parentForm"></param>
            <param name="selectedItem"></param>
            <returns></returns>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Design.FieldSelector.SelectedField">
            <summary>
            Gets the FieldDescriptor selected by the user.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.FieldSelector.ListViewFieldIDSort">
            <summary>
            Provides integer (32 bits) and text sorting
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.FieldSelector.ListViewFieldIDSort.#ctor(System.Int32,System.Boolean,EllieMae.EMLite.Common.UI.ListViewSortManager)">
            <summary>
            Constructor
            </summary>
            <param name="sortColumn">Column to be sorted</param>
            <param name="ascending">true, if ascending order, false otherwise</param>
            <param name="sortMngr">Provides sorting of the items in the list</param>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.FieldEditor">
            <summary>
            Provides a UIType editor for the FieldControl's Field property.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.FieldEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates that the property's editor will be a modal dialog.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.FieldEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Displays the field selection dialog for editing of a FieldControl's Field property.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.FileOpenTypeEditor">
            <summary>
            Provides a user interface for allowing users to select image files.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.FileOpenTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates that the UI provided will be a modal dialog window.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.FileOpenTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Invoked to edit or select an image file from the local disk.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.HTMLFontSelector">
            <summary>
            Provides a user interface for selecting the Font to use for a control.
            </summary>
            <exclude/>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Design.HTMLFontSelector.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.HTMLFontSelector.#ctor(EllieMae.Encompass.Forms.HTMLFont)">
            <summary>
            Constructor using a pre-selected HTMLFont.
            </summary>
            <param name="font"></param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.HTMLFontSelector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.HTMLFontSelector.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Design.HTMLFontSelector.SelectedFont">
            <summary>
            Gets the HTMLFont selected by the user.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.HTMLFontEditor">
            <summary>
            Provides a UITypeEditor for the Font property of the ContentControl.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.HTMLFontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates that the property editor is a modal dialog.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Design.HTMLFontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Displays the HTMLFontSelector dialog to allow the user to select the font for use in a control.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Design.RolodexSelector">
            <summary>
            Provides a type editor for the Rolodex selection field of the TextBox control.
            </summary>
            <exclude/>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DocumentEvents">
            <summary>
            Summary description for DocumentEvents.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DragSelector">
            <summary>
            Represents the drag selection box used when the user shift-clicks in the Form Builder.
            </summary>
            <remarks>This class is intended for use within the Encompass Form Builder only.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DragSelector.BeginDrag(System.Drawing.Point)">
            <summary>
            Starts the drag operation on the control.
            </summary>
            <param name="origin">The origin of the drag operation.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DragSelector.EndDrag">
            <summary>
            Stops the drag operation of the control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DragSelector.DragTo(System.Drawing.Point)">
            <summary>
            Drags the control to the specified absolute position on the Form.
            </summary>
            <param name="dragPoint">The position to expand the drag region to.</param>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DragSelector.Active">
            <summary>
            Indicates if the control is curently active and being dragged.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DragSelector.AllowDesign">
            <summary>
            Prevents the control from being manipulated in the Form Builder.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DropdownBox">
            <summary>
            Rerpresents a Dropdown box on an Encompass input form.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ISupportsChangeEvent">
            <summary>
            Interface signaling that the control supports the Change event
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsChangeEvent.InvokeChange">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsChangeEvent.Change">
            <summary>The Change event provided by controls such as the <see cref="T:EllieMae.Encompass.Forms.TextBox"/> control.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.DropdownBox.RestrictedOption">
            <summary>
            Represents the "restricted" option which is automatically displayed when the user
            does not have access to view the value of the underlying field.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownBox.#ctor">
            <summary>
            Constructor for a new DropdownBox control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownBox.KeepOptions(System.Int32[])">
            <summary>
            This is a special handling for field 2626, user might need to hide some options from user
            This is nothing to do with access mode, just want to prevent user from selecting some options
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownBox.InvokeChange">
            <summary>
            Invokes the Change event on the control.
            </summary>
            <remarks>This method is intended for use by Encompass only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownBox.RefreshProperties">
            <summary>
            Refreshes the properties of the Dropdown box.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownBox.OnChange(System.EventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.DropdownBox.Change"/> event.
            </summary>
            <param name="e">The event arguments to be passed to the event handlers.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownBox.CreateOptionsCollection">
            <summary>
            Method for creating the collection of options for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="E:EllieMae.Encompass.Forms.DropdownBox.Change">
            <summary>
            Event which gets fired when the user modifies the selected value in the DropdownBox.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownBox.Field">
            <summary>
            Gets or sets the loan field associated with the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownBox.Options">
            <summary>
            Gets the collection of options to be displayed in the dropdown box.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownBox.HoverText">
            <summary>
            Overrides the HoverText property because Hover Text is not available on this
            object.
            </summary>
            <remarks>Attempting to set this property will result in a NotSupportedException.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownBox.BorderColor">
            <summary>
            Gets the border color for the control.
            </summary>
            <remarks>The border color for a DropdownEditBox cannot be modified. Attempting to set
            this property will result in an InvalidOperationException.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownBox.BorderStyle">
            <summary>
            Gets the border color for the control.
            </summary>
            <remarks>The border color for a DropdownEditBox cannot be modified.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownBox.BorderWidth">
            <summary>
            Gets the border color for the control.
            </summary>
            <remarks>The border color for a DropdownEditBox cannot be modified.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownBox.SelectedIndex">
            <summary>
            Gets or sets the selected index in the dropdown box.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownBox.Value">
            <summary>
            Gets the current value of the checkbox based on the checked state of the object.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownBox.SupportedEvents">
            <summary>
            Gets the list of supported event names.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DropdownEditBox">
            <summary>
            Provides a control from which the user may select a pre-defined option or enter their own value.
            </summary>
            <remarks>The DropdownEditBox is similar to a DropdownBox but allows the user to type in a custom
            value which is not in the options list.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ISupportsFormatEvent">
            <summary>
            Interface signaling that the control support the FocusIn and FocusOut events
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsFormatEvent.InvokeFormat(System.String@)">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsFormatEvent.Format">
            <summary>The Format event, used to allow on-the-fly formatting of text in textboxes.</summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownEditBox.#ctor">
            <summary>
            Constructor for a new DropdownEditBox control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownEditBox.InvokeFormat(System.String@)">
            <summary>
            Invokes the Format event on the control.
            </summary>
            <param name="value">The value to be formatted.</param>
            <returns>Returns <c>true</c> if auto-formatting should be applied, <c>false</c> otherwise.</returns>
            <remarks>This method is meant for use by the Encompass Input Engine only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownEditBox.OnFormat(EllieMae.Encompass.Forms.FormatEventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.DropdownEditBox.Format"/> event.
            </summary>
            <param name="e">The event parameters passed to the event handlers.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownEditBox.PrepareForDisplay">
            <summary>
            Performs the pre-display processing for the control
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownEditBox.RefreshProperties">
            <summary>
            Refreshes the properties of the control based on the current field information.
            </summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.DropdownEditBox.Format">
            <summary>
            The Format event is fired as the user types into the control to allow on-the-fly formatting
            of the entered value.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.Field">
            <summary>
            Gets or sets the loan field associated with the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.Enabled">
            <summary>
            Gets or sets whether the control is enabled and permits user interaction.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.BackColor">
            <summary>
            Override the background color of the control.
            </summary>
            <remarks>The DropdownEdit box does not support custom background colors. Attempting
            to set this property will result in an exception.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.SupportsBackColor">
            <summary>
            Indicates if the control supports setting the BackColor property.
            </summary>
            <remarks>This property will always return <c>false</c> for this object.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.ForeColor">
            <summary>
            Override the text color of the control.
            </summary>
            <remarks>The DropdownEdit box does not support custom foreground colors. Attempting
            to set this property will result in an exception.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.SupportsForeColor">
            <summary>
            Indicates if the control supports setting the ForeColor property.
            </summary>
            <remarks>This property will always return <c>false</c> for this object.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.Font">
            <summary>
            Override the font used within the control.
            </summary>
            <remarks>The DropdownEdit box does not support custom font selections. Attempting
            to set this property will result in an exception.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.SupportsFont">
            <summary>
            Indicates if the control supports setting the Font property.
            </summary>
            <remarks>This property will always return <c>false</c> for this object.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.Text">
            <summary>
            Gets the current value of the checkbox based on the checked state of the object.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.Value">
            <summary>
            Gets the current value of the checkbox based on the checked state of the object.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.SupportedEvents">
            <summary>
            Returns the list of events supported by this control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownEditBox.Interactive">
            <summary>
            Gets a flag indicating if the current control is interactive.
            </summary>
            <remarks>An interactive control is one that accepts input from a user. A control can be enabled
            but not interactive if it is contained in a <see cref="T:EllieMae.Encompass.Forms.ContainerControl"/> which is disabled.
            </remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DropdownOption">
            <summary>
            Represents a single option in a DropdownBox or other list-based control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOption.#ctor(System.String)">
            <summary>
            Constructor for a new DropdownOption.
            </summary>
            <param name="text">The text of the option.</param>
            <remarks>Using this constructor, the <see cref="P:EllieMae.Encompass.Forms.DropdownOption.Value"/> of the option is set to the
            same value is the <see cref="P:EllieMae.Encompass.Forms.DropdownOption.Text"/>.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOption.#ctor(System.String,System.String)">
            <summary>
            Constructor for a new DropdownOption specifying both its text and value.
            </summary>
            <param name="text">The displayed text of the option.</param>
            <param name="value">The underlying value of the option.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOption.IsEmpty">
            <summary>
            Determines if the option is "empty", i.e. contains no text or value.
            </summary>
            <returns>Returns <c>true</c> if both the <see cref="P:EllieMae.Encompass.Forms.DropdownOption.Text"/> and <see cref="P:EllieMae.Encompass.Forms.DropdownOption.Value"/>
            properties are empty strings.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOption.Equals(System.Object)">
            <summary>
            Provides an equality operator for DropdownOptions.
            </summary>
            <param name="obj">The DropdownOption to which to compare the current option.</param>
            <returns>Returns <c>true</c> if both options have the same <see cref="P:EllieMae.Encompass.Forms.DropdownOption.Value"/>,
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOption.GetHashCode">
            <summary>
            Provides a hash code for the option.
            </summary>
            <returns>Returns an interger has code based on the option's <see cref="P:EllieMae.Encompass.Forms.DropdownOption.Value"/>.</returns>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownOption.Text">
            <summary>
            Gets the displayed text of the option in the list.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownOption.Value">
            <summary>
            Gets the value of the option when saved into the loan file.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DropdownOptionCollection">
            <summary>
            Represents an ordered collection of <see cref="T:EllieMae.Encompass.Forms.DropdownOption"/> objects associated with a
            list-based control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the DropdownOptions at the specified index.
            </summary>
            <param name="index">The index of the option to be removed.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.Insert(System.Int32,EllieMae.Encompass.Forms.DropdownOption)">
            <summary>
            Inserts a new DropdownOption into a list at the specified index.
            </summary>
            <param name="index">The index at which to insert the option.</param>
            <param name="value">The <see cref="T:EllieMae.Encompass.Forms.DropdownOption"/> to be inserted.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.Remove(EllieMae.Encompass.Forms.DropdownOption)">
            <summary>
            Removes a DropdownOption from the collection.
            </summary>
            <param name="value">The option to be removed.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.Contains(EllieMae.Encompass.Forms.DropdownOption)">
            <summary>
            Determines if an option with the specified value is contained in the collection.
            </summary>
            <param name="value">The DropdownOption to search for.</param>
            <returns>Returns <c>true</c> if an option exists with the same <see cref="P:EllieMae.Encompass.Forms.DropdownOption.Value"/>
            as the specified value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.Clear">
            <summary>
            Clears the list of options.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.IndexOf(EllieMae.Encompass.Forms.DropdownOption)">
            <summary>
            Returns the index of an option within the list.
            </summary>
            <param name="value">The DropdownOption the index of which is to be returned.</param>
            <returns>Returns the index of the option in the list, or -1 if not found.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.Add(EllieMae.Encompass.Forms.DropdownOption)">
            <summary>
            Adds a DropdownOption to the list of options
            </summary>
            <param name="value">The option to be added.</param>
            <returns>The index of the option within the list.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.Add(System.String,System.String)">
            <summary>
            Adds a new option to the dropdown list.
            </summary>
            <param name="text">The text of the option to add.</param>
            <param name="value">The underlying value of the option.</param>
            <returns>The index of the newly added option within the list.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.Add(System.String)">
            <summary>
            Adds a new option to the dropdown list.
            </summary>
            <param name="text">The text (and value) of the option to add.</param>
            <returns>The index of the newly added option within the list.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.AddRange(System.Collections.ICollection)">
            <summary>
            Adds a collection of DropdownOption objects to the list.
            </summary>
            <param name="optionList">The collection of DropdownOption objects to be
            added.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.ToArray">
            <summary>
            Returns an array containing the ordered list of <see cref="T:EllieMae.Encompass.Forms.DropdownOption"/> objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.GetEnumerator">
            <summary>
            Provides an enumerator for the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DropdownOptionCollection.ToString">
            <summary>
            Provides a string representation of the collection.
            </summary>
            <returns>A description of the number of items in the collection.</returns>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownOptionCollection.Item(System.Int32)">
            <summary>
            Returns a <see cref="T:EllieMae.Encompass.Forms.DropdownOption"/> based on its index in the list.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DropdownOptionCollection.Count">
            <summary>
            Gets the number of options in the collection.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Alignment">
            <summary>
            Defines the possible alignment types which can be applied to a group of controls.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Alignment.None">
            <summary>No alignment specified.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Alignment.Left">
            <summary>Align controls horizontally by their left edges.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Alignment.Center">
            <summary>Align controls horizontally by centers.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Alignment.Right">
            <summary>Align controls horizontally by their right edges.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Alignment.Top">
            <summary>Align controls verically by their top edges.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Alignment.Middle">
            <summary>Align controls verically by their centers.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Alignment.Bottom">
            <summary>Align controls verically by their bottom edges.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ResizeMethod">
            <summary>
            Enumeration of the allow control resizing methods.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.ResizeMethod.None">
            <summary>No resizing method specified.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.ResizeMethod.Width">
            <summary>Resize controls to have same width.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.ResizeMethod.Height">
            <summary>Resize controls to have same height.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.ResizeMethod.Both">
            <summary>Resize controls to have same width and height.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.BorderStyle">
            <summary>
            Enumeration of the available control border styles.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.BorderStyle.None">
            <summary>No border</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.BorderStyle.Dotted">
            <summary>Dotted line</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.BorderStyle.Dashed">
            <summary>Dashed line</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.BorderStyle.Solid">
            <summary>Solid line</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.BorderStyle.Double">
            <summary>Double line</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.BorderStyle.Groove">
            <summary>Groove effect</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.BorderStyle.Ridge">
            <summary>Ridge effect</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.BorderStyle.Inset">
            <summary>Inset effect</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.BorderStyle.Outset">
            <summary>Outset effect</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Location">
            <summary>
            The prdefined locations to which a control can be moved within its container.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Location.None">
            <summary>No location specified</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Location.TopLeft">
            <summary>Top-left corner of container</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Location.Top">
            <summary>Top edge of container</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Location.TopRight">
            <summary>Top-right corner of container</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Location.Left">
            <summary>Left edge of container</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Location.Right">
            <summary>Right edge of container</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Location.BottomLeft">
            <summary>Bottom-left corner of container</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Location.Bottom">
            <summary>Bottom edge of container</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Location.BottomRight">
            <summary>Bottom-right corner of container</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.TextAlignment">
            <summary>
            Enumeration of assignable text alignment styles.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.TextAlignment.Auto">
            <summary>Auto-alignment based on field type.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.TextAlignment.Left">
            <summary>Left alignment of text in field.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.TextAlignment.Right">
            <summary>Right alignment of text in field.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.RolodexField">
            <summary>
            Enumeration of the fields which can be pulled from the Rolodex.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.None">
            <summary>No field specified</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.Company">
            <summary>Company name</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.Name">
            <summary>Contact name</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.AddressLine1">
            <summary>Contact address, line 1</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.AddressLine2">
            <summary>Contact address, line 1</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.FullAddress">
            <summary>Contact address, lines 1 and 2 combined</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.City">
            <summary>Contact address, city</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.State">
            <summary>Contact address, state</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.ZipCode">
            <summary>Contact address, ZIP code</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.Phone">
            <summary>Contact phone number</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.Fax">
            <summary>Contact fax number</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.CellPhone">
            <summary>Cell Phone</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.Email">
            <summary>Contact email address</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.CompanyLicenseNo">
            <summary>Contact/Company license number</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.Category">
            <summary>Business category</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.ABA">
            <summary>Contact/business routing number</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.AccountName">
            <summary>Contact/business routing account name</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.WebSite">
            <summary>Buesiness web site URL</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.MortgageeClauseCompany">
            <summary>Mortgagee Clause Company Name</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.MortgageeClauseName">
            <summary>Mortgagee Clause Contact Name</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.MortgageeClauseAddressLine">
            <summary>Mortgagee Clause Address</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.MortgageeClauseCity">
            <summary>Mortgagee Clause City</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.MortgageeClauseState">
            <summary>Mortgagee Clause State</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.MortgageeClauseZipCode">
            <summary>Mortgagee Clause Zip Code</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.MortgageeClausePhone">
            <summary>Mortgagee Clause Phone Number</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.MortgageeClauseFax">
            <summary>Mortgagee Clause Fax Number</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.MortgageeClauseText">
            <summary>Mortgagee Clause Text</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.HomePhone">
            <summary>Contact Home Phone</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.RolodexField.OrganizationID">
            <summary>Organization Identifier</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.LayoutMethod">
            <summary>
            Enumeration of the layout methods which can be applied to controls.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.LayoutMethod.Flow">
            <summary>Control flows up against previously added control automatically.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.LayoutMethod.Positioned">
            <summary>Control is manually position on the form.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.FieldSource">
            <summary>
            Indicates the source of the data for a <see cref="T:EllieMae.Encompass.Forms.FieldControl"/>.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.FieldSource.CurrentLoan">
            <summary>Data source is the currently opened loan.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.FieldSource.LinkedLoan">
            <summary>Data source is the "linked" loan of the currently opened loan, if any.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.FieldSource.Other">
            <summary>Specifies a custom field source used in DataBinding.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ContactMethod">
            <summary>
            Enumeration of the contact methods available for a <see cref="T:EllieMae.Encompass.Forms.ContactButton"/> control.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.ContactMethod.Phone">
            <summary>Contact is to be made by phone.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.ContactMethod.Email">
            <summary>Contact is to be made by email.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.ContactMethod.Cell">
            <summary>Contact is to be made by cell phone.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.ContactMethod.Fax">
            <summary>Contact is to be made by fax.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.FieldAccessMode">
            <summary>
            Enumeration of the field access modes which are applied based on business rules.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.FieldAccessMode.NoRestrictions">
            <summary>No field access restrictions are applied to the field.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.FieldAccessMode.ReadOnly">
            <summary>User has read-only access to the field based on existing business rules.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.FieldAccessMode.Hidden">
            <summary>User has no access to the field based on existing business rules.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.StandardButtonType">
            <summary>
            Enumeration of the button types supported by the <see cref="T:EllieMae.Encompass.Forms.StandardButton"/>.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.StandardButtonType.Edit">
            <summary>Button is to display an Edit window.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.StandardButtonType.Lookup">
            <summary>Button is to display the lookup window.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.StandardButtonType.Clear">
            <summary>Button is to clear/delete a value.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.StandardButtonType.Refresh">
            <summary>Button is to refresh content of one or multiple fields depending on the action taken.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.StandardButtonType.Help">
            <summary>Button is to display help content.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.StandardButtonType.Calendar">
            <summary>Button displays a calendar.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.StandardButtonType.Alert">
            <summary>Button showing the alert icon.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Overflow">
            <summary>
            Defines the different options for how text will overflow a control's boundaries.
            </summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Overflow.Auto">
            <summary>Specifies that overflow will be handled automatically by the control.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Overflow.Clip">
            <summary>Any overflow content will be clipped off at the edge of the control.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Overflow.Ellipses">
            <summary>The text will be truncated and elipses automatically added.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.EmptyControl">
            <summary>
            Summary description for EmptyControl.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ISupportsLoadEvent">
            <summary>
            Interface signaling that the control supports the Click event
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsLoadEvent.InvokeLoad">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsLoadEvent.InvokeUnload">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsLoadEvent.Load">
            <summary>The Load event, used by the Form class.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsLoadEvent.Unload">
            <summary>The Unload event, used by the Form class.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ISupportsPopupEvent">
            <summary>
            Interface signaling that the control supports the Popup event
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsPopupEvent.InvokePopup">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ISupportsPopupEvent.InvokeItemSelected(EllieMae.Encompass.Forms.DropdownOption)">
            <summary>This method is intended for internal use within Encompass only.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsPopupEvent.Popup">
            <summary>The Popup event, used by the <see cref="T:EllieMae.Encompass.Forms.PickList"/> control to allow runtime formatting of its pick list.</summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ISupportsPopupEvent.ItemSelected">
            <summary>The ItemSelected event, used by the <see cref="T:EllieMae.Encompass.Forms.PickList"/> control to allow runtime handling of the user's selection.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DataBindEventArgs">
            <summary>
            Class representing the arguments for the DataBind event
            </summary>
            <remarks>The <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataBind"/> event allows you to author custom code
            to manipulate the way in which loan data is represented within your form's controls. Use this
            event in conjunction with the <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataCommit"/> event to perform
            completely custom data binding within Encompass.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DataBindEventArgs.#ctor(System.String)">
            <summary>
            Constructor for the DataBindEventArgs class
            </summary>
            <param name="value">The value to be bound to the control.</param>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DataBindEventArgs.Value">
            <summary>
            Gets or sets the value being bound into the control.
            </summary>
            <remarks>Your code may access this property to determine the value which is about
            to be bound to the <see cref="T:EllieMae.Encompass.Forms.FieldControl"/>. You can override this value by setting
            the property to the new value you wish to have bound. Doing this will not cause the
            value in the underlying loan to be updated.
            </remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DataBindEventArgs.Cancel">
            <summary>
            Gets or sets whether the default data binding behavior should be cancelled.
            </summary>
            <remarks>Set this property to <c>true</c> to completely override the default
            data binding behavior for a <see cref="T:EllieMae.Encompass.Forms.FieldControl"/>. When this property is true
            the Encompass framework will not attempt to bind the <see cref="P:EllieMae.Encompass.Forms.DataBindEventArgs.Value"/> to the control.
            Instead, you should perform your own binding logic.
            <p>Generally, if you set this property to <c>true</c> you will often need to handle the
            control's <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataCommit"/> event as well to include custom code
            for commiting the value back to the loan.</p>
            </remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DataCommitEventArgs">
            <summary>
            Class representing the arguments for the DataCommit event
            </summary>
            <remarks>The <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataCommit"/> event allows you to author custom code
            to manipulate the way in which data is saved from the control into the loan. Use this
            event in conjunction with the <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataBind"/> event to perform
            completely custom data binding within Encompass.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.DataCommitEventArgs.#ctor(System.String)">
            <summary>
            Constructor for the DataCommitEventArgs object
            </summary>
            <param name="value">The value to be committed to the loan.</param>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DataCommitEventArgs.Value">
            <summary>
            Gets or sets the value to be commited to the loan.
            </summary>
            <remarks>When the event is triggered, the Value property will be set to the value to
            be stored in the underlying loan using the <see cref="P:EllieMae.Encompass.Forms.FieldControl.Field"/> specified
            for the control. You can modify the value being saved by setting this property to
            a different value.
            <p>Alternatively, you could directly update the loan file and set the <see cref="P:EllieMae.Encompass.Forms.DataCommitEventArgs.Cancel"/>
            property to <c>true</c>, essentially preventing the Encompass framework from saving any value
            into the loan for this field. This technique allows for completely customized data binding
            behavior.</p>
            </remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DataCommitEventArgs.Cancel">
            <summary>
            Gets or sets whether Encompass will commit the <see cref="P:EllieMae.Encompass.Forms.DataCommitEventArgs.Value"/> to the loan.
            </summary>
            <remarks>Set this property to <c>true</c> to prevent Encompass from saving the
            <see cref="P:EllieMae.Encompass.Forms.DataCommitEventArgs.Value"/> to the loan. This can be done if your field control's display
            does not correspond to the actual underlying field value and you want to completely
            control the manner in which data flows between the control and the loan file.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DataBindEventHandler">
            <summary>
            Delegate definition for the <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataBind"/> event.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DataCommitEventHandler">
            <summary>
            Delegate definition for the <see cref="E:EllieMae.Encompass.Forms.FieldControl.DataCommit"/> event.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.FormatEventArgs">
            <summary>
            Class representing the arguments for the Format event.
            </summary>
            <remarks>The Format event is used to perform on-the-fly formatting for text as the
            user types. Use the <see cref="P:EllieMae.Encompass.Forms.FormatEventArgs.Value"/> property to obserrve what the user has typed and,
            if necessary to change it.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FormatEventArgs.Value">
            <summary>
            Gets or sets the value displayed in the control.
            </summary>
            <remarks>When the Format event is raised, the Value property represents the contents of the control
            including the user's latest modifications. Your custom code should apply whatever filtering or
            formatting logic is appropriate and set the result back into the Value property.
            </remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FormatEventArgs.Cancel">
            <summary>
            Gets or sets whether the default formatting should be applied.
            </summary>
            <remarks>By setting this property to <c>true</c> you prevent the automatic formatting based
            on the control's field type from being applied to the value. The automtic formatting is 
            always applied after the Format event is raised, so any changes made to the <see cref="P:EllieMae.Encompass.Forms.FormatEventArgs.Value"/>
            property will be auto-formatted unless this property is set to <c>false</c>.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.FormatEventHandler">
            <summary>
            Delegate for the Format event.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ItemSelectedEventArgs">
            <summary>
            Class representing the arguments for the ItemSelected event
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ItemSelectedEventArgs.SelectedItem">
            <summary>
            Gets the <see cref="T:EllieMae.Encompass.Forms.DropdownOption"/> selected by the user.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ItemSelectedEventHandler">
            <summary>
            Event delegate for the <see cref="T:EllieMae.Encompass.Forms.PickList"/>'s ItemSelected event.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DateSelectedEventArgs">
            <summary>
            Class representing the arguments for the DateSelectedEvent event
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.DateSelectedEventArgs.SelectedDate">
            <summary>
            Gets the DateTime selected by the user.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.DateSelectedEventHandler">
            <summary>
            Event delegate for the <see cref="T:EllieMae.Encompass.Forms.Calendar"/>'s DateSelected event.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.FieldLock">
            <summary>
            The FieldLock control allows the user to lock and unlock Encompass calculated fields.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldLock.#ctor">
            <summary>
            Constructor for a new FieldLock control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldLock.DisplayImage(System.Boolean)">
            <summary>
            Changes the lock image on the button.
            </summary>
            <param name="locked">Indicates whether the lock or unlock image
            should currently be displayed.</param>
            <remarks>This method is for use by the Encompass application framework
            and should not be invoked by external applications.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldLock.InvokeClick">
            <summary>
            Invokes the Click event on the control.
            </summary>
            <returns></returns>
            <remarks>This method is intended for use by the Encompass application only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.FieldLock.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.FieldLock.Click"/> event.
            </summary>
            <param name="e">The event parameters to be passed to the event handlers.</param>
        </member>
        <member name="E:EllieMae.Encompass.Forms.FieldLock.Click">
            <summary>
            The Click event is fired whenever the user clicks this control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldLock.ControlToLock">
            <summary>
            Gets or sets the Control ID of the field control to be locked by this
            FieldLock.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldLock.HoverText">
            <summary>
            Gets of sets the tooltip text that appears when the user hovers the mouse over this control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldLock.Locked">
            <summary>
            Indicates if the field lock is currently set.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FieldLock.SupportedEvents">
            <summary>
            Gets the names of the events supported by this control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.FormOptions">
            <summary>
            Enumeration of the form management options when opening a Form.
            </summary>
            <remarks>This enumeration is for use by the Encompass applicaiton only.</remarks>
        </member>
        <member name="F:EllieMae.Encompass.Forms.FormOptions.None">
            <summary>No options selected.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.FormOptions.ManageEvents">
            <summary>Allow for internal management of the native HTML events.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.FormOptions.AllowEditing">
            <summary>Allow for editing mode to be enabled in the form.</summary>
        </member>
        <member name="F:EllieMae.Encompass.Forms.FormOptions.All">
            <summary>Enables all options.</summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Form">
            <summary>
            Represents an Encompass input form.
            </summary>
            <remarks>
            The Form control provides the framework for every Encompass input form, whether it's a standard
            form provided by the Encompass application or a custom form created in the Input Form Builder.
            A Form is made up of multiple <see cref="T:EllieMae.Encompass.Forms.Control">Controls</see> which provide the visual appearance
            and behaviors of the form.
            </remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.#ctor">
            <summary>
            Constructor for a Form.
            </summary>
            <remarks>You will never need to instantiate a Form object within your own code. Instead,
            you may need to derive from the Form class when creating a codebase assembly for your
            custom input form. For more information, see the Encompass Advanced API documentation.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.AttachToDocument(mshtml.HTMLDocument,EllieMae.Encompass.Forms.FormOptions)">
            <summary>
            Attaches the Form control to an HTML document object.
            </summary>
            <param name="document">The document object to which to attach the form.</param>
            <param name="options">The optons to determine the behavior of the form object.</param>
            <remarks>This method is used by the Encompass application and is not intended for use
            by external code.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.ToHTML">
            <summary>
            Returns a string containing the HTML content of the form.
            </summary>
            <returns>A string containing the HTML of the form.</returns>
            <remarks>This method is intended for use within the Encompass Form Builder only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.VisibleToAbsolutePosition(System.Drawing.Point)">
            <summary>
            Converts a point which in client coordinates to an absolute position on the form.
            </summary>
            <param name="clientPosition">The point to be converted, relative to the
            top-left visible corner of the form.</param>
            <returns>The corresponding absolute position on the form</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.AbsoluteToVisiblePosition(System.Drawing.Point)">
            <summary>
            Converts a point from absolute form coordinates to visible client coordinates.
            </summary>
            <param name="position">The point to be converted, relative to the
            top-left corner of the form.</param>
            <returns>The corresponding position, relative to the top-left visible
            corner of the form, as determined by scrolling.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.Delete">
            <summary>
            Overrides the Delete method for the Form control.
            </summary>
            <remarks>This method throws the InvalidOperationException.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.MoveTo(EllieMae.Encompass.Forms.Location)">
            <summary>
            Overrides the MoveTo method for the Form control.
            </summary>
            <param name="location">The location to which to move the control.</param>
            <remarks>This method has no effect on the control.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.Select">
            <summary>
            Adds the Form control into the current selection set.
            </summary>
            <remarks>This method can only be used within the Encompass Form Builder.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.CreateControls">
            <summary>
            Overridable method intended to allow derived classes to create control instances.
            </summary>
            <remarks>When creating a derived Form class, use the CreateControls method to
            retrieve control instances and save them into instance variables in your derived class.
            For example, use the <see cref="M:EllieMae.Encompass.Forms.Form.FindControl(System.String)"/> method to retrieve a control based on
            its <see cref="P:EllieMae.Encompass.Forms.Control.ControlID"/> and cast it to the appropriate control type.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.FindControl(System.String)">
            <summary>
            Locates a control in the Form based on Control ID.
            </summary>
            <param name="controlId">The <see cref="P:EllieMae.Encompass.Forms.Control.ControlID"/> of the control to be found.</param>
            <returns>Returns the control with the specified ControlID, or <c>null</c> if no such control
            exists.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.FindControlsByType(System.Type)">
            <summary>
            Returns all controls that derive from a particular Type.
            </summary>
            <param name="baseType">The base control type.</param>
            <returns>Returns an array of all controls which derive from the specified
            Type.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.GetAllFieldControls">
            <summary>
            Returns all of the <see cref="T:EllieMae.Encompass.Forms.FieldControl">FieldControls</see> in the Form.
            </summary>
            <returns>Returns an array containing every control which derives from the
            <see cref="T:EllieMae.Encompass.Forms.FieldControl"/> base class.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.GetAllControls">
            <summary>
            Returns a list of every control on the form.
            </summary>
            <returns>Returns an array containing every control on the Form.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.Refresh">
            <summary>
            Forces the entire form's state to be refreshed
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.Refresh(System.Boolean)">
            <summary>
            Refreshes the controls on the forms.
            </summary>
            <param name="refreshAll">If <c>false</c>, only controls associated with fields whose
            values have changed will be refreshed. Otherwise, all fields are refreshed.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.GetFieldTabSequence">
            <summary>
            Returns the list of field controls in tab-order sequence.
            </summary>
            <returns>The returned array contains all of the field controls sorted by
            their <see cref="P:EllieMae.Encompass.Forms.FieldControl.TabIndex"/> values.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.GetContainerAtPoint(System.Drawing.Point)">
            <summary>
            Returns the most-nested <see cref="T:EllieMae.Encompass.Forms.ContainerControl"/> at the specified point.
            </summary>
            <param name="pt">The point to test at.</param>
            <returns>Returns the ContainerControl lowest in the control hierarchy
            which is at the specified point. This method always returns a value since the
            Form control itself is a ContainerControl and will be returned if no other ContainerControl
            is found.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.InvokeLoad">
            <summary>
            Invokes the Load event on the Form.
            </summary>
            <remarks>This method is intended for internal use within Encompass only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e">The event arguments passed to the event handlers.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.InvokeUnload">
            <summary>
            Invokes the Unload event on the Form.
            </summary>
            <remarks>This method is intended for internal use within Encompass only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.OnUnload(System.EventArgs)">
            <summary>
            Raises the Unload event.
            </summary>
            <param name="e">The event arguments passed to the event handlers.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.ElementToControl(mshtml.IHTMLElement)">
            <summary>
            Converts a HTML element to a control based on its properties.
            </summary>
            <param name="controlElement"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.ElementToControl(mshtml.IHTMLElement,System.Type)">
            <summary>
            Converts an HTML element to a specific type of control.
            </summary>
            <param name="controlElement"></param>
            <param name="controlType"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.FindControlForElement(mshtml.IHTMLElement)">
            <summary>
            Finds the control in which an HTML element exists.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.StartEditing">
            <summary>
            Places the form in editing mode.
            </summary>
            <remarks>This method can only be invoked from within the Encompass Form Builder.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.StopEditing">
            <summary>
            Removes the form from editing mode.
            </summary>
            <remarks>This method can only be invoked from within the Encompass Form Builder.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.Open(mshtml.HTMLDocument)">
            <summary>
            Opens an Form based on an underlying HTMLDocument.
            </summary>
            <param name="baseDocument">The document which backs the Form.</param>
            <returns></returns>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.Close">
            <summary>
            Closes the Form, releasing all of its resources.
            </summary>
            <remarks>This method is intended for use by the Encompass application only. Closing the
            form manually can cause errors or unexpected behavior.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.AttachToFormScreen(EllieMae.EMLite.InputEngine.IFormScreen,System.String)">
            <summary>
            Attaches the object to the underlying form engine. This method is intended for
            internal use by Encompass only.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.OnEventEditor(EllieMae.Encompass.Forms.Design.EventCodeEditorArgs)">
            <summary>
            Raises the EventEditor event.
            </summary>
            <param name="e">The event parameters to be passed to the event handlers</param>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.OnKeyPress(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the EventEditor event.
            </summary>
            <param name="e">The event parameters to be passed to the event handlers</param>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Form.ExecAction(System.String)">
            <summary>
            Executes a standard action in the Encompass loan editor.
            </summary>
            <param name="action">The action to be performed</param>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.ContextMenu">
            <summary>This event is meant for us within the Encompass application only.</summary>
            <exclude/>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.SelectionChanged">
            <summary>This event is meant for us within the Encompass application only.</summary>
            <exclude/>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.Resize">
            <summary>This event is meant for us within the Encompass application only.</summary>
            <exclude/>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.Move">
            <summary>This event is meant for us within the Encompass application only.</summary>
            <exclude/>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.PropertyChange">
            <summary>This event is meant for us within the Encompass application only.</summary>
            <exclude/>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.ControlAdded">
            <summary>This event is meant for us within the Encompass application only.</summary>
            <exclude/>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.ControlDeleted">
            <summary>This event is meant for us within the Encompass application only.</summary>
            <exclude/>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.FieldBindingChanged">
            <summary>This event is meant for us within the Encompass application only.</summary>
            <exclude/>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.ControlIDChanged">
            <summary>This event is meant for us within the Encompass application only.</summary>
            <exclude/>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.EventEditor">
            <summary>This event is meant for us within the Encompass application only.</summary>
            <exclude/>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.KeyPress">
            <summary>This event is meant for us within the Encompass application only.</summary>
            <exclude/>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.Load">
            <summary>The Load event is fired when the form is intially loaded into the Loan Editor.</summary>
            <remarks>The Load event can be used to perform any processing that must occur when the form
            is first displayed to the user, e.g. hiding form elements or populating FieldControls which
            are not bound to specific Encompass fields.</remarks>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Form.Unload">
            <summary>The Unload event is fired when the form is unloaded from the Loan Editor.</summary>
            <remarks>A form is unloaded whenever the user navigates to a new input form or closes the
            loan file. The Unload event occurs prior to the form being closed but cannot be used to
            prevent the form from being closed. Use this event to perform any cleanup that is necessary
            before the form is disposed.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.SelectedControls">
            <summary>
            Gets the collection of currently selected controls.
            </summary>
            <remarks>This property can only be used when the Form is being designed.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.Visible">
            <summary>
            Overrides the Visible property for the Form control.
            </summary>
            <remarks>A form's visible property cannot be modified, it will always be <c>true</c>.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.Enabled">
            <summary>
            Overrides the Enabled property for the Form control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.Position">
            <summary>
            Gets or sets the position of the form.
            </summary>
            <remarks>This property cannot be modified.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.Size">
            <summary>
            Gets or sets the size of the form.
            </summary>
            <remarks>This property cannot be modified.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.Layout">
            <summary>
            Overrides the behavior of the Layout property for the form.
            </summary>
            <remarks>The layout for a form is always Flow and cannot be modified.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.AllowCutCopyDelete">
            <summary>
            Indicates that the Form control cannot be cut, copied or deleted.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.BorderColor">
            <summary>
            Gets or sets the border color of the Form.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.ScrollOffset">
            <summary>
            Gets the offset of the origin of the form based on the current scroll position.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.EventLanguage">
            <summary>
            Gets or sets the language used for coding of events
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.CodeBase">
            <summary>
            Gets or sets the class and assembly which act as the code base for this form.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.SupportedEvents">
            <summary>
            Gets the list of events supported by the Form class.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.EditingEnabled">
            <summary>
            Indicates if the form is currently in edit mode.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.Name">
            <summary>
            Gets the name of the input form.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.ControlEvents">
            <summary>
            Returns the set of Control Event for the form.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Form.Loan">
            <summary>
            Retrieves the Loan which is currently loaded into the page.
            </summary>
            <remarks>This property is only valid when the form is loaded in
            Encompass during runtime.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.FormCodeBase">
            <summary>
            Summary description for CodeBase.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.FormEventHandler">
            <summary>
            Event delegate for the Form's event handlers
            </summary>
            <exclude/>
        </member>
        <member name="T:EllieMae.Encompass.Forms.FormEventArgs">
            <summary>
            Event arguments for the Form's events.
            </summary>
            <exclude/>
        </member>
        <member name="F:EllieMae.Encompass.Forms.FormEventArgs.Empty">
            <summary>
            Represents an empty set of event arguments.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FormEventArgs.Control">
            <summary>
            Gets the <see cref="P:EllieMae.Encompass.Forms.FormEventArgs.Control"/> which is affected by this event.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FormEventArgs.Cancel">
            <summary>
            Gets or sets a flag that allows the event to be cancelled.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FormEventArgs.Button">
            <summary>
            Returns information on the mouse button clicked by the user.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FormEventArgs.MousePositionInVisibleRegion">
            <summary>
            Gets the position of the mouse within the visible region.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.FormEventArgs.MousePosition">
            <summary>
            Gets the absolute position of the mouse on the Form.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ControlIDChangedEventHandler">
            <summary>
            Event delegate for the ControlIDChanged event
            </summary>
            <exclude/>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ControlIDChangedEventArgs">
            <summary>
            Event arguments for the ControlIDChanged event.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ControlIDChangedEventArgs.PriorControlID">
            <summary>
            Gets the controls previous control ID.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.GroupBox">
            <summary>
            A <see cref="T:EllieMae.Encompass.Forms.ContainerControl"/> used for second-level sections in Encompass input forms.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.GroupBox.#ctor">
            <summary>
            Constructor for a new GroupBox control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.GroupBox.HeaderBackColor">
            <summary>
            Overrides the header background color of a GroupBox control. Because this control's header
            contains a backgroun image, this property is ineffective.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.HorizontalRule">
            <summary>
            Represents a horizontal line on the Form.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.HorizontalRule.#ctor">
            <summary>
            Constructor for a new HorizontalRule control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.HorizontalRule.Enabled">
            <summary>
            Gets or sets the enabled state of the control.
            </summary>
            <remarks>This property has no effect on this control.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.HorizontalSlider">
            <summary>
            A <see cref="T:EllieMae.Encompass.Forms.Slider"/> control used to move controls horizontally in the form.
            </summary>
            <remarks>This control is a <see cref="T:EllieMae.Encompass.Forms.DesignerControl"/> and is not intended for use
            at runtime.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Slider">
            <summary>
            A Slider is a <see cref="T:EllieMae.Encompass.Forms.DesignerControl"/> which allows the form designer to easily shift
            form content left-and-right or up-and-down.
            </summary>
            <remarks>Because this control is a DesignerControl, it will not be visible at runtime if
            left on a Form.</remarks>
        </member>
        <member name="F:EllieMae.Encompass.Forms.Slider.SlideStart">
            <summary>
            Represents the starting position of a slide operation.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Slider.#ctor">
            <summary>
            Constructor for a new Slider control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Slider.Active">
            <summary>
            Indicates of the slider is active or not.
            </summary>
            <remarks>This property can only be modified at design time. Attempts to modify this
            property at runtime will result in an exception.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.HorizontalSlider.#ctor">
            <summary>
            Constructor for a new Slider control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Html2XHtml">
            <summary>
            Provides methods for converting HTML to XHTML.
            </summary>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Html2XHtml.Convert(System.String)">
            <summary>
            Converts an HTML string to an XHTML string.
            </summary>
            <param name="htmlString">The HTML string to be converted</param>
            <returns>A string containing XHTML.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Html2XHtml.Convert(System.String,System.Boolean,System.Boolean)">
            <summary>
            Converts an HTML string to an XHTML string.
            </summary>
            <param name="htmlString">The string to be converted.</param>
            <param name="preserveCase">Flag indicating if case of tags and attributes should be 
            preserved during the conversion.</param>
            <param name="useRoundTripEncoding">Flag indicating if round-trip encoding is to be used
            to ensure non-breaking spaces are properly encoded.</param>
            <returns>An XHTML-formatted string.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Html2XHtml.Revert(System.String)">
            <summary>
            Reverts an XHTML string that was round-trip encoded using the Convert method.
            </summary>
            <param name="xmlString">The string to be reverted.</param>
            <returns>Returns a string in which the non-breaking spaces have been reverted to
            their native values.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Html2XHtml.CapText(System.Text.RegularExpressions.Match)">
            <summary>
            remove the cdata mark from html string
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="T:EllieMae.Encompass.Forms.HtmlReader">
            <summary>
            This class skips all nodes which has some kind of prefix. This trick does the job 
            to clean up MS Word/Outlook HTML markups.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.HtmlReader.#ctor(System.IO.TextReader,System.Boolean)">
            <summary>
            Overloads <see cref="T:Sgml.SgmlReader">Sgml.SgmlReader</see>'s constructor <see cref="T:Sgml.SgmlReader">SgmlReader( TextReader reader )</see>
            </summary>
            <param name="preserveCase"></param>
            <param name="reader">The TextReader reads from. </param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.HtmlReader.#ctor(System.String,System.Boolean)">
            <summary>
            Overloads <see cref="T:Sgml.SgmlReader">Sgml.SgmlReader</see>'s constructor <see cref="T:Sgml.SgmlReader">SgmlReader( )</see>
            </summary>
            <param name="preserveCase"></param>
            <param name="content">The content string reads from.</param>
        </member>
        <member name="T:EllieMae.Encompass.Forms.HtmlWriter">
            <summary>
            Extends XmlTextWriter to provide Html writing feature which is not as strict as Xml
            writing. For example, Attributes without value will give it a value "true".
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.HtmlWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Overloads <see cref="T:System.Xml.XmlTextWriter">XmlTextWriter</see>'s constructor <see cref="T:System.Xml.XmlTextWriter">HtmlWriter( TextWriter writer )</see>
            </summary>
            <param name="writer">The TextWriter to write to. It is assumed that the TextWriter is already set to the correct encoding.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.HtmlWriter.#ctor(System.Text.StringBuilder)">
            <summary>
            Overloads <see cref="T:System.Xml.XmlTextWriter">XmlTextWriter</see>'s constructor <see cref="T:System.Xml.XmlTextWriter">HtmlWriter( StringWriter builder )</see>
            </summary>
            <param name="builder">The stream to which you want to write. </param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.HtmlWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Overloads <see cref="T:System.Xml.XmlTextWriter">XmlTextWriter</see>'s constructor <see cref="T:System.Xml.XmlTextWriter">HtmlWriter( Stream stream, Encoding enc )</see>
            </summary>
            <param name="stream">The stream to which you want to write. </param>
            <param name="enc">The encoding to generate. If encoding is a null reference (Nothing in Visual Basic) it writes out the stream as UTF-8 and omits the encoding attribute from the ProcessingInstruction. </param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.HtmlWriter.WriteString(System.String)">
            <summary>
            Adds a value of "true" to attributes without value
            </summary>
            <param name="text">Attributes value</param>
        </member>
        <member name="T:EllieMae.Encompass.Forms.HTMLFont">
            <summary>
            Represents a Font used within an Encompass Form.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.HTMLFont.#ctor(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Constructor for an HTMLFont object.
            </summary>
            <param name="family">The font family name.</param>
            <param name="size">The font size, in pixels</param>
            <param name="bold">Flag to indicate if it should be bold-faced.</param>
            <param name="italics">Flag to indicate if it should be italicized.</param>
            <param name="underline">Flag to indicate if it should be underlined.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.HTMLFont.ToString">
            <summary>
            Provides a string representation of the font.
            </summary>
            <returns></returns>
        </member>
        <member name="P:EllieMae.Encompass.Forms.HTMLFont.Family">
            <summary>
            Gets or sets the font family.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.HTMLFont.Size">
            <summary>
            Gets ot sets the font size.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.HTMLFont.Italics">
            <summary>
            Gets or sets whether the font is italicized.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.HTMLFont.Bold">
            <summary>
            Gets or sets whether the font is bold-faced.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.HTMLFont.Underline">
            <summary>
            Gets or sets whether the font is underlined.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.HTMLFont.Unit">
            <summary>
            Gets the graphics unit used for the font.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.HTMLHelper">
            <summary>
            Summary description for HTMLHelper.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Hyperlink">
            <summary>
            Represents a clickable hyperlink in the Form.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Label">
            <summary>
            Represents a simple lable containing static text on the Form.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Label.#ctor">
            <summary>
            Constructor for a new Label control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Label.Text">
            <summary>
            Gets or sets the text displayed in the label.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Label.Overflow">
            <summary>
            Determines how text in the element is clipped if it overflows the bounds of the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Label.WordWrap">
            <summary>
            Gets or sets whether word-wrap is enabled in the label.
            </summary>
            <remarks>This property must be set to <c>false</c> in order for the <see cref="P:EllieMae.Encompass.Forms.Label.Overflow"/>
            property to be set to <c>Ellipses</c>.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Label.AutoSize">
            <summary>
            Gets or sets whether the label will automatically size itself to it contents.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Hyperlink.#ctor">
            <summary>
            Constructor for a new Hyperlink control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Hyperlink.InvokeClick">
            <summary>
            Invokes the Click event on the object.
            </summary>
            <returns></returns>
            <remarks>This method is intended for use by the Encompass application only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Hyperlink.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.Hyperlink.Click"/> event.
            </summary>
            <param name="e">The event argument passed to the event handlers.</param>
        </member>
        <member name="E:EllieMae.Encompass.Forms.Hyperlink.Click">
            <summary>
            The Click event is fired when the user clicks the hyperlink.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Hyperlink.URL">
            <summary>
            Gets or sets the URL associated with the hyperlink.
            </summary>
            <remarks>This property can be left blank if you use the <see cref="E:EllieMae.Encompass.Forms.Hyperlink.Click"/> event to perform
            the desired action. If this property is set and you create a click event handler, the event
            handler will be triggered first and then the URL will be lanuched.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Hyperlink.SupportedEvents">
            <summary>
            Gets the names of the events supported by this class.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Image">
            <summary>
            Represents a static image on the Form.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Image.#ctor">
            <summary>
            Constructor for a new Image control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Image.Enabled">
            <summary>
            Gets or sets the enabled state of the image.
            </summary>
            <remarks>This property has no effect on this control.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Image.Source">
            <summary>
            Gets ot sets the source location of the image.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Image.Stretch">
            <summary>
            Gets or sets whether the image is stretched to fill the Image control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ImageButton">
            <summary>
            Provides a button which can be represented using an arbitary image.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ImageButton.#ctor">
            <summary>
            Constructor for a new ImageButton control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ImageButton.InvokeClick">
            <summary>
            Invokes the Click method on the control.
            </summary>
            <returns></returns>
            <remarks>This method is intended for use by the Encompass application only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ImageButton.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.ImageButton.Click"/> event.
            </summary>
            <param name="e">The parameters passed to the event handlers.</param>
        </member>
        <member name="E:EllieMae.Encompass.Forms.ImageButton.Click">
            <summary>
            The Click event is fired when the user clicks the ImageButton control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ImageButton.Source">
            <summary>
            Gets ot sets the source location of the image.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ImageButton.Action">
            <summary>
            Sets the action associated with the button.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ImageButton.HoverText">
            <summary>
            Gets or sets the tooltip text displayed when the mouse hovers over the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ImageButton.SupportedEvents">
            <summary>
            Returns the list of events supported by this control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.MultilineTextBox">
            <summary>
            Represents a text box capable of supporting multiple lines of text input by the user.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.TextBox">
            <summary>
            Represents a text field into which the user can type a single line of text.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.TextBox.#ctor">
            <summary>
            Constructor for a new TextBox control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.TextBox.PrepareForDisplay">
            <summary>
            Performs final tasks before displaying the control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.TextBox.InvokeChange">
            <summary>
            Invokes the Change event on the control.
            </summary>
            <remarks>This method is intended for use by the Encompass application only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.TextBox.OnChange(System.EventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.TextBox.Change"/> event.
            </summary>
            <param name="e">The parameters passed to the event handlers.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.TextBox.InvokeFormat(System.String@)">
            <summary>
            Invokes the format event on the control to perform specialized formatting of
            the data element.
            </summary>
            <param name="value">The value to be formatted for the control.</param>
            <returns>Returns <c>true</c> if the Form Engine should apply the default formatting
            to the value, <c>false</c> otherwise.</returns>
            <remarks>This method is intended for use by the Encompass application only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.TextBox.OnFormat(EllieMae.Encompass.Forms.FormatEventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.TextBox.Format"/> event.
            </summary>
            <param name="e">The parameters passed to the event handlers.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.TextBox.AttachedPickList(EllieMae.Encompass.Forms.PickList)">
            <summary>
            Attaches a PickList control to the current TextBox.
            </summary>
            <param name="pickList">The PickList control to attach.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.TextBox.CreatePickList(System.String[])">
            <summary>
            Creates a PickList control which is bound to the current textbox.
            </summary>
            <param name="listItems">The list of items to appear in the PickList.</param>
            <returns>The PickList object created for the control.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.TextBox.GetPickList">
            <summary>
            Returns the PickList bound to the current control, if any.
            </summary>
            <returns>Return the <see cref="T:EllieMae.Encompass.Forms.PickList"/> control bound to this TextBox if one is
            present, <c>null</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.TextBox.RemovePickList">
            <summary>
            Detaches a picklist from the control, if one is attached
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.TextBox.RefreshProperties">
            <summary>
            Refreshes the control's properties when the bound field is changed.
            </summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.TextBox.Change">
            <summary>
            The Change event is fired when the user leaves the control and its value has been modified.
            </summary>
        </member>
        <member name="E:EllieMae.Encompass.Forms.TextBox.Format">
            <summary>
            The format event is fired with each keystroke the user makes in the control to allow for
            on-the-fly formatting.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.TextBox.Field">
            <summary>
            Gets or sets the underlying loan field assocuated with the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.TextBox.Text">
            <summary>
            Gets/Sets the text displayed in the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.TextBox.Value">
            <summary>
            Gets the value of this field, equivalent to the value of the Text property.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.TextBox.MaxLength">
            <summary>
            Gets/Sets the maximum length of the text in the field
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.TextBox.Enabled">
            <summary>
            Gets or sets the enabled state of the TextBox control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.TextBox.Alignment">
            <summary>
            Gets or sets the style of the TextBox, which determines the alignment and
            formatting of text in the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.TextBox.Rolodex">
            <summary>
            Gets or sets the <see cref="T:EllieMae.Encompass.Forms.RolodexGroup"/> with which this control is associated.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.TextBox.RolodexField">
            <summary>
            Gets or sets the <see cref="P:EllieMae.Encompass.Forms.TextBox.RolodexField"/> that determined which Rolodex value is
            copied to this field when a contact is selected.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.TextBox.Interactive">
            <summary>
            Indicates of the control is able to accept user input.
            </summary>
            <remarks>This property may be false even if the Enabled property is true as the control
            may be contained in a contain which is disabled.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.TextBox.SupportsMaxLength">
            <summary>
            Indicates if the current control supports the MaxLength property.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.TextBox.SupportedEvents">
            <summary>
            Returns the list of event supported by this control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.MultilineTextBox.#ctor">
            <summary>
            Constructor for a new MultilineTextBox control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.MultilineTextBox.Text">
            <summary>
            Gets/Sets the value of the field
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.MultilineTextBox.MaxLength">
            <summary>
            Gets/Sets the maximum length of the text in the field
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.MultilineTextBox.SupportsMaxLength">
            <summary>
            Indciates whether this control type supports the MaxLength property.
            </summary>
            <remarks>This property always returns False for the MultilineTextBox.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Panel">
            <summary>
            Represents a simple <see cref="T:EllieMae.Encompass.Forms.ContainerControl"/> with a single border.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Panel.#ctor">
            <summary>
            Constructor for a new Panel control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.PickList">
            <summary>
            Provides a dynamic list of options for the user to choose from in a modal pop-up.
            </summary>
            <remarks>To make the PickList control useful you must add an event handler to the
            <see cref="E:EllieMae.Encompass.Forms.PickList.ItemSelected"/> event. Use the selected item to populate a loan field or
            whatever other behavior you need to achieve.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.PickList.#ctor">
            <summary>
            Constructor for a new PickList control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.PickList.InvokePopup">
            <summary>
            Invokes the Popup event on the object.
            </summary>
            <remarks> This method is meant for internal use within Encompass.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.PickList.OnPopup(System.EventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.PickList.Popup"/> event.
            </summary>
            <param name="e">The parameters passed to the event handlers.</param>
        </member>
        <member name="M:EllieMae.Encompass.Forms.PickList.InvokeItemSelected(EllieMae.Encompass.Forms.DropdownOption)">
            <summary>
            Invokes the ItemSelected event on the object.
            </summary>
            <remarks>This method is meant for internal use within Encompass.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.PickList.OnItemSelected(EllieMae.Encompass.Forms.ItemSelectedEventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.PickList.ItemSelected"/> event.
            </summary>
            <param name="e">The parameters passed to the event handlers.</param>
        </member>
        <member name="E:EllieMae.Encompass.Forms.PickList.Popup">
            <summary>
            The Popup event is fired when the user clicks the control.
            </summary>
            <remarks>Use this event to dynamically generate the list of options that are available
            to the user (if not defined at design time).</remarks>
        </member>
        <member name="E:EllieMae.Encompass.Forms.PickList.ItemSelected">
            <summary>
            The ItemSelected event is fired when the user selects an item from the list.
            </summary>
            <remarks>Use this event to make the PickList functional, e.g. to copy the selected value
            to a loan field or use it as the input for another operation.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.PickList.Options">
            <summary>
            Gets the collection of options to be displayed in the dropdown box.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.PickList.Title">
            <summary>
            Gets or sets the title that will appear on the Pick List box when displayed.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.PickList.BoundControl">
            <summary>
            Gets or sets the Control to which the PickLis is bounds
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.PickList.SupportedEvents">
            <summary>
            Gets the list of events supported by this class.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.RadioButton">
            <summary>
            Represents a radio button control on an Encompass input form.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RadioButton.#ctor">
            <summary>
            Constructor for a new RadioButton control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RadioButton.InvokeClick">
            <summary>
            Invokes the Click event on the control.
            </summary>
            <returns></returns>
            <remarks>This method is intended for use within Encompass only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RadioButton.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.RadioButton.Click"/> event.
            </summary>
            <param name="e">The event parameters passed to the event handlers.</param>
        </member>
        <member name="E:EllieMae.Encompass.Forms.RadioButton.Click">
            <summary>
            The Click event is fired when the user selects the radio button.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RadioButton.Field">
            <summary>
            Gets or sets the Field associated with this control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RadioButton.Text">
            <summary>
            Gets or sets the text associated with the Radio Button.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RadioButton.GroupName">
            <summary>
            Gets or sets the radio button group to which this control belongs.
            </summary>
            <remarks>The GroupName of a radio button determine how radio buttons work together.
            At most only one radio button can be selected within a given group.</remarks>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RadioButton.CheckedValue">
            <summary>
            The value the underlying field will take on if this radio button is selected.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RadioButton.Value">
            <summary>
            Gets the current value of the radio button set based on the checked state 
            of the object.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RadioButton.Checked">
            <summary>
            Gets/Sets the checked state of the radio buttons
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RadioButton.SupportedEvents">
            <summary>
            Gets the list of events supported by this control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.Rolodex">
            <summary>
            Provides the ability for users to pop open the Rolodex dialog and select a contact for one
            or more fields on the Form.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Rolodex.#ctor">
            <summary>
            Constructor for a new Rolodex control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.Rolodex.Delete">
            <summary>
            Overrides the Delete method for the control, ensuring all Rolodex data is cleaned up.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Rolodex.BusinessCategory">
            <summary>
            The <see cref="P:EllieMae.Encompass.Forms.Rolodex.BusinessCategory"/> that will be opened by default when the rolodex is launched.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.Rolodex.Group">
            <summary>
            Gets the <see cref="T:EllieMae.Encompass.Forms.RolodexGroup"/> associated with this control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.RolodexGroup">
            <summary>
            Represents a set of field which are used to populate the form from a Rolodex control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RolodexGroup.GetFieldMap(System.String)">
            <summary>
            Gets the <see cref="T:EllieMae.Encompass.Forms.RolodexField"/> which is mapped to the specified Field ID.
            </summary>
            <param name="fieldId">The Field ID for which to find the mapping.</param>
            <returns>The <see cref="T:EllieMae.Encompass.Forms.RolodexField"/> which is tied to this field ID, 
            of RolodexField.None if no mapping is present.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RolodexGroup.Equals(System.Object)">
            <summary>
            Provides a comparison operator for two RolodexGroups.
            </summary>
            <param name="obj">The group to compare against.</param>
            <returns>Returns <c>true</c> if the two groups have the same <see cref="P:EllieMae.Encompass.Forms.RolodexGroup.GroupID"/>,
            <c>false</c> otherwise.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RolodexGroup.GetHashCode">
            <summary>
            Provides a has code implementation for the class.
            </summary>
            <returns>Returns a hash code based on the <see cref="P:EllieMae.Encompass.Forms.RolodexGroup.GroupID"/>.</returns>
        </member>
        <member name="M:EllieMae.Encompass.Forms.RolodexGroup.ToString">
            <summary>
            Provides a string representation of the group.
            </summary>
            <returns></returns>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RolodexGroup.GroupID">
            <summary>
            Gets the ID of the Rolodex group.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RolodexGroup.Name">
            <summary>
            Gets the name of the rolodex group, which corresponds to the name of the Rolodex control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RolodexGroup.BusinessCategory">
            <summary>
            Gets or sets the <see cref="P:EllieMae.Encompass.Forms.RolodexGroup.BusinessCategory"/> for this rolodex group.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.RolodexGroup.Item(EllieMae.Encompass.Forms.RolodexField)">
            <summary>
            Gets or sets the field ID of the field which has been mapped to the 
            specified <see cref="T:EllieMae.Encompass.Forms.RolodexField"/>.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.RolodexGroups">
            <summary>
            Represents a Form's collection of <see cref="T:EllieMae.Encompass.Forms.RolodexGroup"/> items.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.StandardButton">
            <summary>
            Provides a button which can be represented using an arbitary image.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.StandardButton.#ctor">
            <summary>
            Constructor for a new ImageButton control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.StandardButton.InvokeClick">
            <summary>
            Invokes the Click method on the control.
            </summary>
            <returns></returns>
            <remarks>This method is intended for use by the Encompass application only.</remarks>
            <exclude/>
        </member>
        <member name="M:EllieMae.Encompass.Forms.StandardButton.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:EllieMae.Encompass.Forms.StandardButton.Click"/> event.
            </summary>
            <param name="e">The parameters passed to the event handlers.</param>
        </member>
        <member name="E:EllieMae.Encompass.Forms.StandardButton.Click">
            <summary>
            The Click event is fired when the user clicks the ImageButton control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.StandardButton.ButtonType">
            <summary>
            Gets ot sets the source location of the image.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.StandardButton.Action">
            <summary>
            Sets the action associated with the button.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.StandardButton.HoverText">
            <summary>
            Gets or sets the tooltip text displayed when the mouse hovers over the control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.StandardButton.SupportedEvents">
            <summary>
            Returns the list of events supported by this control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.TabIndexSortComparer">
            <summary>
            Used to sort FieldControl objects by their tab index
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.VerticalRule">
            <summary>
            Used to add a vertical dividing line to the Form.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.VerticalRule.#ctor">
            <summary>
            Constructor for a new VericialRule control.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.VerticalRule.Enabled">
            <summary>
            Gets or sets the enabled state of the control.
            </summary>
            <remarks>This property has no effect on this control.</remarks>
        </member>
        <member name="T:EllieMae.Encompass.Forms.VerticalSlider">
            <summary>
            A <see cref="T:EllieMae.Encompass.Forms.Slider"/> which permit the form designer to move controls vertically on the page.
            </summary>
            <remarks>This control is a <see cref="T:EllieMae.Encompass.Forms.DesignerControl"/> and is not intended for use
            at runtime.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.VerticalSlider.#ctor">
            <summary>
            Constructor for a new VerticalSlider control.
            </summary>
        </member>
        <member name="T:EllieMae.Encompass.Forms.ZipCodeLookup">
            <summary>
            A <see cref="T:EllieMae.Encompass.Forms.DesignerControl"/> that adds ZIP code lookup functionality to a form.
            </summary>
            <remarks>Use this control to perform automatic ZIP code lookups when a user leaves a ZIP code
            field and have the matching city, county and/or state populated into other fields.</remarks>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ZipCodeLookup.#ctor">
            <summary>
            Constructor for a new ZipCodeLookup control.
            </summary>
        </member>
        <member name="M:EllieMae.Encompass.Forms.ZipCodeLookup.Delete">
            <summary>
            Overrides the base class Delete method to ensure that the control is properly disposed of.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ZipCodeLookup.ZipControl">
            <summary>
            Gets or sets the Control which contains the ZIP Code information.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ZipCodeLookup.CityField">
            <summary>
            Gets or sets the Field which will be populated with the City that is resolved from the ZIP Code.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ZipCodeLookup.CountyField">
            <summary>
            Gets or sets the Field which will be populated with the County that is resolved from the ZIP Code.
            </summary>
        </member>
        <member name="P:EllieMae.Encompass.Forms.ZipCodeLookup.StateField">
            <summary>
            Gets or sets the Field which will be populated with the State that is resolved from the ZIP Code.
            </summary>
        </member>
    </members>
</doc>
